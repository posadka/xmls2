# -*- coding: utf-8 -*-

import re,json,base64,requests,time,random,math
try:
    from urllib import urlencode, quote_plus, urlparse, urljoin
except ImportError:
    from urllib.parse import urlencode, quote_plus, urlparse, urljoin

from resources.lib.modules import control
from resources.lib.modules import client
from resources.lib.modules import site
from resources.lib.modules import workers
from resources.lib.modules import jsunpack
from resources.lib.modules import hunter

class streamer:
    def dodgycodes(s):
        return re.sub('&#(\d+);', '', s)

    def resolve(self, url):
        try:
            if 'epicmartial' in url: u = self.epicmartial(url)

            if 'castweb' in url: u = self.epicmartial(url)

            if 'elixx.xyz' in url: u = self.elixx(url)

            elif 'daddylive' in url: u = self.daddylive(url)

            elif 'daddyhd' in url: u = self.daddylive(url)

            elif 'livetvon' in url: u = self.daddylive(url)

            elif 'eddensports.com' in url: u = self.solaris(url)

            elif 'redsoccer.info' in url: u = self.solaris(url)

            elif 'worldstreams.net' in url: u = self.worldstreams(url)

            elif 'mazymedias.com' in url: u = self.mazy(url)

            elif 'mazystreams.xyz' in url: u = self.mazy(url)

            elif 'buffstream.live/nba' in url: u = self.bslivenba(url)

            elif 'nflup.live' in url: u = self.nflup(url)

            elif 'papahd' in url: u = self.papahd(url)

            elif 'bfst.xyz' in url: u = self.beast(url)

            elif 'bfst.live' in url: u = self.onestream(url)

            elif 'fightpass.site' in url: u = self.fightpass(url)

            elif 'allsportsmedia.live' in url: u = self.fightpass(url)

            elif 'allsportsdaily.co' in url: u = self.tvnba(url)

            elif 'gameavenue.co' in url: u = self.tvnba(url)

            elif 'maxsports.site' in url: u = self.tvnba(url)

            elif 'icelz.newsrade.tk' in url: u = self.ice(url)

            elif 'hockeynews.site' in url: u = self.helena(url)

            elif 'tennews.live' in url: u = self.helena(url)

            elif 'nbaweb.site' in url: u = self.helena(url)

            elif 'hockeyweb' in url: u = self.tvnba(url)

            elif 'scoresunday.com' in url: u = self.tvnba(url)

            elif 'nbaweb.xyz' in url: u = self.skuanet(url)

            elif 'myustv.com' in url: u = self.myustv(url)

            elif 'freesport.info' in url: u = self.myustv(url)

            elif 'cricworld.club' in url: u = self.myustv(url)

            elif 'thecyclingentertainment.com' in url: u = self.markky(url)

            elif 'motornews.live' in url: u = self.markky(url)

            elif 'markky88.com' in url: u = self.markky(url)

            elif 'markkystreams' in url: u = self.markky(url)

            elif '6stream.xyz' in url: u = self.markky(url)

            elif '6streams.tv' in url: u = self.markky(url)

            elif 'foxupdates.com' in url: u = self.markky(url)

            elif 'successstudios.co' in url: u = self.markky(url)

            elif 'sportsnest.co' in url: u = self.sportsnest(url)

            elif 'dofusports' in url: u = self.sportsnest(url)

            elif 'nbajunkie.xyz/' in url: u = self.sportsnest(url)

            elif 'bestreamsports.org' in url: u = self.sportsnest(url)

            elif 'sportsbuzz.co' in url: u = self.markky(url)

            elif 'givemevibes.com' in url: u = self.markky(url)

            elif 'techtricksng.com' in url: u = self.markky(url)

            elif 'telechargementfilmhd.com' in url: u = self.nbahdreplay(url)

            elif 'bestsolaris.com/nbastreams' in url: u = self.tvnba(url)

            elif 'bestsolaris.com/mlbstreams' in url: u = self.tvnba(url)

            elif 'bestsolaris.com/category/nflstreams/' in url: u = self.tvnba(url)

            elif 'bestsolaris.com/nflstreams' in url: u = self.tvnba(url)

            elif 'bestsolaris.com/cfbstreams' in url: u = self.tvnba(url)

            elif '123tvsports.com/nfl-streams/' in url: u = self.tvnfl(url)

            elif '9live.club' in url: u = self.tvnfl(url)

            elif '123tvsports.com/ncaaf-streams/' in url: u = self.tvncaaf(url)

            elif 'bestsolaris.com/nhlstreams' in url: u = self.tvnhl(url)

            elif '123tvsports.com/mma-streams/' in url: u = self.tvmma(url)

            elif '123tvsports.com/boxing-streams/' in url: u = self.tvboxing(url)

            elif '123tvsports.com/f1-streams/' in url: u = self.tvf1(url)

            elif 'live-nhl.stream' in url: u = self.livenhl(url)

            elif 'sportsbay.org' in url: u = self.sportsbay(url)

            elif 'live-tennis.stream' in url: u = self.tennislive(url)

            elif 'nascar-live.stream' in url: u = self.tennislive(url)

            elif 'sports24.club/nhl' in url: u = self.sports24nhl(url)

            elif 'sports24.site/nhl' in url: u = self.sports24nhl(url)

            elif 'sports24.club/f1' in url: u = self.sports24f1(url)

            elif 'sports24.club/nba' in url: u = self.sports24nba(url)

            elif 'sports24.club/nfl' in url: u = self.sports24nfl(url)

            elif 'sports24.club/ncaa' in url: u = self.sports24ncaa(url)

            elif 'sports24.club/ncaab' in url: u = self.sports24ncaab(url)

            elif 'sports24.club/ncaab' in url: u = self.sports24ufc(url)

            elif 'everysports.us/watch/nhl/' in url: u = self.everysportsnhl(url)

            elif 'everysports.us/view/mlb' in url: u = self.everysportsmlb(url)

            elif 'everysports.us/view/nfl' in url: u = self.everysportsnfl(url)

            elif 'volokit' in url: u = self.volokit(url)

            elif 'sportsstatsme.net/watch/NHL-streams' in url: u = self.ssnhl(url)

            elif 'retsports.com' in url: u = self.ssnhl(url)

            elif 'sportsstats.xyz/www.sportsstats.me' in url: u = self.ssnhl(url)

            elif 'sportsstats.xyz/www.sportsstats.me/nhl2' in url: u = self.ssnhl(url)

            elif 'sportsstats.xyz/www.sportsrp.com/nhl' in url: u = self.ssnhl(url)

            elif 'sportsrp.com/www.sportsstats.me/nhl2' in url: u = self.ssnhl(url)

            elif 'sportsrp.com/sechdules/NHL-streams/2/' in url: u = self.ssnhl(url)

            elif 'www.sportsrp.com/watch/NHL-streams' in url: u = self.ssnhl(url)

            elif 'sportsstats.xyz/www.sportsstats.me/nhl3' in url: u = self.ssnhl(url)

            elif 'sportsstats.xyz/www.sportsstzts.me/nhl2' in url: u = self.ssnhl(url)

            elif 'sportsstatsme.net/watch/NBA-streams' in url: u = self.ssnba(url)

            elif 'sportsstatsme.net/watch/NFL-streams' in url: u = self.ssnba(url)

            elif 'sportsstatsme.net/watch/MLS-streams' in url: u = self.ssnba(url)

            elif 'playoffsstream' in url: u = self.playoffnfl(url)

            elif '720pstream' in url: u = self.seventwenty(url)

            elif 'watchkobestreams' in url: u = self.watchkobestreams(url)

            elif 'yoursports.stream' in url: u = self.yss(url)

            elif 'yrsprts.stream' in url: u = self.yss(url)

            elif 'yoursports.to' in url: u = self.yss(url)

            elif 'crackstreams1' in url: u = self.crackstreams(url)

            elif 'methstreams.to' in url: u = self.weakspell(url)

            elif 'methstreams' in url: u = self.rmeth(url)

            elif 'nbastreamswatch' in url: u = self.rmeth(url)

            elif 'hesgoal' in url: u = self.hesgoal(url)

            elif 'buffstreams.app' in url: u = self.buffstreams(url)

            elif 'givemereddit' in url: u = self.givemereddit(url)

            elif 'givemenflstreams' in url: u = self.givemereddit(url)

            elif 'givemenbastreams' in url: u = self.givemereddit(url)

            elif 'givememmastreams' in url: u = self.givemereddit(url)

            elif 'givemeredditstreams' in url: u = self.givemereddit(url)

            elif 'tezgoal.com' in url: u = self.hdstreams(url)

            elif 'freehdgames' in url: u = self.hdstreams(url)

            elif 'hhdstreams.club' in url: u = self.hdstreams(url)

            elif 'hdstreamss.club' in url: u = self.hdstreams(url)

            elif 'uhdstreams.club' in url: u = self.hdstreams(url)

            elif 'uhdgames.xyz' in url: u = self.hdstreams(url)

            elif 'gameshdlive' in url: u = self.solaris(url)

            elif 'gamehdlive' in url: u = self.solaris(url)

            elif 'bfstrms.xyz' in url: u = self.buff(url)

            elif 'ntgdhsgfs.re/' in url: u = self.buff(url)

            elif 'bfst.to' in url: u = self.buff(url)

            elif 'bfstrs.xyz' in url: u = self.buff(url)

            elif 'buffstreamz.com' in url: u = self.buff(url)

            elif 'ripple.stream' in url: u = self.ripple(url)

            elif 'nflsportz.com' in url: u = self.nflsportz(url)

            elif 'topstreams.info/nba' in url: u = self.topstreams(url)

            elif 'topstreams.info/nfl' in url: u = self.topstreamsnfl(url)

            elif 'streameast' in url: u = self.streameast(url)

            elif 'istreameast' in url: u = self.streameast(url)

            elif 'ertech.work' in url: u = self.skuanet(url)

            elif 'chimxoan.net' in url: u = self.skuanet(url)

            elif 'skuanet.us' in url: u = self.skuanet(url)

            elif 'Skuanet.Us' in url: u = self.skuanet(url)

            elif 'harumu.me/' in url: u = self.skuanet(url)

            elif 'viafb.site/' in url: u = self.skuanet(url)

            elif 'fnew.tech' in url: u = self.skuanet(url)

            elif 'psm.wtf' in url: u = self.skuanet(url)

            elif 'fabtech.work' in url: u = self.skuanet(url)

            elif 'ruapa.com/' in url: u = self.skuanet(url)

            elif 'gardener101.work' in url: u = self.skuanet(url)

            elif 'jmutech.xyz' in url: u = self.skuanet(url)

            elif 'aas.works' in url: u = self.skuanet(url)

            elif 'kimta' in url: u = self.skuanet(url)

            elif 'sagoad.com/' in url: u = self.skuanet(url)

            elif 'anhdepmoingay.com/' in url: u = self.skuanet(url)

            elif 'ustvgo.cc' in url: u = self.skuanet(url)

            elif 'hinhnenhd.info' in url: u = self.skuanet(url)

            elif 'bubofitness.com' in url: u = self.skuanet(url)

            elif 'midcoastplanning.org' in url: u = self.skuanet(url)

            elif 'fxmagicmusic' in url: u = self.skuanet(url)

            elif 'ftheanh.tech' in url: u = self.skuanet(url)

            elif 'azulitostreams.com' in url: u = self.skuanet(url)

            elif 'banknotewiki.com' in url: u = self.skuanet(url)

            elif 'boxingfightsvideos' in url: u = self.boxingfightsvideos(url)

            elif 'crichd' in url: u = self.cric(url)
            
            elif 'telehub.org' in url: u = self.tubby(url)

            elif 'btstream.live' in url: u = self.btstream(url)
            
            elif 'soccerjumbotv1.me' in url: u = self.jumbo(url)

            elif 'sjumbotvs' in url: u = self.jumbo(url)

            elif 'sportnews.to' in url: u = self.sportnews(url)

            elif 'mysports.to' in url: u = self.sportnews(url)

            elif 'footy.to' in url: u = self.sportnews(url)

            elif 'blacktiesports' in url: u = self.blacktienba(url)

            elif 'wpstream.tv' in url: u = self.weakspell(url)

            elif 'weakspell' in url: u = self.weakspell(url)

            elif 'weaksports.xyz' in url: u = self.hdstreams(url)

            elif 'liveonscore.tv' in url: u = self.weakspell(url)

            elif 'liveonscore.to' in url: u = self.weakspell(url)

            elif 'weakstreams' in url: u = self.weakspell(url)

            elif 'weakstream.org' in url: u = self.weakspell(url)

            elif 'ufckhabib.com' in url: u = self.ufckhabib(url)

            elif 'sportsurge.stream' in url: u = self.ufckhabib(url)

            elif 'ovostreams' in url: u = self.ovostreams(url)

            elif 'ovogoaal' in url: u = self.ovostreams(url)

            elif 'ovogoal' in url: u = self.ovostreams(url)

            elif 'ovo-gola' in url: u = self.ovostreams(url)

            elif 'sportschamp' in url: u = self.ovostreams(url)

            elif 'soccerstreams.football' in url: u = self.ovostreams(url)

            elif 'easy-sport.tv' in url: u = self.ovostreams(url)

            elif 'tv247.us' in url: u = self.tvtwofour(url)

            elif 'myoplay.club' in url: u = self.myoplay(url)

            elif 'techoreels.com' in url: u = self.techno(url)

            elif 'techclips.net' in url: u = self.techno(url)

            elif 'bdnewszh' in url: u = self.ranionfl(url)

            elif 'epllive.net' in url: u = self.ranionfl(url)

            elif 'streamspass' in url: u = self.ranionfl(url)

            elif 'recipemam.com' in url: u = self.recipemam(url)

            elif 'catchystream.com' in url: u = self.catchy(url)

            elif 'sportsurge.in' in url: u = self.sportsurge(url)

            elif 'hdstreams.pw' in url: u = self.sportsurge(url)

            elif 'ace' in url: u = self.ace(url)

            elif 'nbatvsport.com' in url: u = self.nbatvsport(url)

            elif 'changnews.co.uk' in url: u = self.nbatvsport(url)

            elif 'geekingeek.com' in url: u = self.geekingeek(url)

            elif 'rightcombat.com' in url: u = self.rightcombat(url)

            elif 'poscitech.com' in url: u = self.poscitech(url)

            elif 'iwizwig.online' in url: u = self.iwizwig(url)

            elif 'torridplay.com' in url: u = self.skuanet(url)

            elif 'sportinglive.co' in url: u = self.skuanet(url)

            elif 'cricworld.club' in url: u = self.cricworld(url)

            elif 'nflscoop' in url: u = self.sportsupa(url)

            elif 'nflbuzz.xyz' in url: u = self.capp(url)

            elif 'techstribes.com' in url: u = self.capp(url)

            elif 'grealish.net' in url: u = self.capp(url)

            elif 'darwinstreams.com' in url: u = self.darwinstreams(url)

            elif 'freetvsports.com' in url: u = self.freetvsports(url)

            elif 'p2pstreams.com' in url: u = self.ptwopstreams(url)

            elif 'p2pstreams.live' in url: u = self.ptwopstreams(url)

            elif 'sportek.xyz' in url: u = self.sportek(url)

            elif 'bongstreams.com' in url: u = self.bong(url)

            elif 'sporteks.net' in url: u = self.sporteks(url)

            elif 'pawastreams' in url: u = self.pawastreams(url)

            elif 'boltcast.info' in url: u = self.pawastreams(url)

            elif 'supertipz.com' in url: u = self.supertipz(url)

            elif 'dubsstreamz.com' in url: u = self.dubsstreamz(url)

            elif 'dubzstreams.com' in url: u = self.dubsstreamz(url)

            elif 'summerlivestream.com' in url: u = self.summerlivestream(url)

            elif 'streaming4u.org/' in url: u = self.summerlivestream(url)

            elif 'soccer24hd.com' in url: u = self.sstwentyfour(url)

            elif 'crazystreams.ga' in url: u = self.crazystreams(url)

            elif '1stream' in url: u = self.onestream(url)

            elif 'topstreams.tv' in url: u = self.toptv(url)

            elif 'dubznetwork' in url: u = self.dubznetwork(url)

            elif 'tvsportslive.fr' in url: u = self.tvsportslive(url)

            elif 'sportsio' in url: u = self.sportsio(url)

            elif '60fps' in url: u = self.sixtyfps(url)

            elif 'sportsguild.net' in url: u = self.sportsguild(url)

            elif 'ustv247.tv' in url: u = self.ustvtwentyfourseven(url)

            elif 'sportinglive' in url: u = self.sportinglive(url)

            elif 'silverspoon.site' in url: u = self.silverspoon(url)

            elif 'sequencecard.xyz' in url: u = self.silverspoon(url)

            elif 'willsports' in url: u = self.silverspoon(url)

            elif 'sportsallday.net' in url: u = self.silverspoon(url)

            elif 'sportsupa' in url: u = self.sportsupa(url)

            elif 'maxsport' in url: u = self.maxsport(url)

            elif 'thegentleclass' in url: u = self.tvnba(url)

            elif 'hitstreams' in url: u = self.hitstreams(url)

            elif 'metaporky' in url: u = self.metaporky(url)

            elif 'alexsports' in url: u = self.alexsports(url)

            elif 'alexsportz' in url: u = self.alexsports(url)

            elif 'nbagaffer' in url: u = self.nbagaffer(url)

            elif 'soccerstreams.football' in url: u = self.soccerstreams(url)

            elif 'f1livestream' in url: u = self.soccerstreams(url)

            elif 'soccersislive' in url: u = self.soccersislive(url)

            elif 'bikesports' in url: u = self.tvnba(url)

            elif 'basketball-video' in url: u = self.basketballvideo(url)

            elif 'nfl-video' in url: u = self.nflvideo(url)

            elif 'nizarstream' in url: u = self.nizarstream(url)

            elif 'enjoyhd' in url: u = self.enjoyhd(url)

            elif 'youpit' in url: u = self.youpit(url)

            elif 'mysports.to' in url: u = self.sportnews(url)

            elif 'prolive.tv' in url: u = self.prolive(url)

            elif 'paktech2' in url: u = self.paktech(url)

            elif 'olympicology.com' in url: u = self.olympicology(url)

            elif 'enjoy4k' in url: u = self.enjoyfourk(url)

            elif 'sports-stream.site' in url: u = self.sportsstreamsite(url)

            elif 'hdrez' in url: u = self.hdrez(url)

            elif 'sporthaze' in url: u = self.hdrez(url)

            elif 'bingsport' in url: u = self.bingsport(url)

            elif 'thetvapp' in url: u = self.tvapp(url)

            elif 'score808.football' in url: u = self.score(url)

            elif 'worldcupglory' in url: u = self.worldcupglory(url)

            elif 'headlines.footybite.to' in url: u = self.worldcupglory(url)

            elif 'headlines.reddit-soccerstreams' in url: u = self.headlines(url)

            elif 'backfirstwo' in url: u = self.backfirstwo(url)

            elif 'streambtw' in url: u = self.streambtw(url)

            elif 'livespor' in url: u = self.streambtw(url)

            elif 'mlbstreams.ai' in url: u = self.mlbstreamsai(url)

            elif 'naughtyblog' in url: u = self.naughtyblog(url)

            elif 'live3.totalsportek1000' in url: u = self.totalsportek(url)

            elif 'fsportshd' in url: u = self.fsportshd(url)

            else: u = self.generic(url)

            return u
        except:
            pass


    def generic(self, url):
        try:
            r = client.request(url)
            r = r.replace('\\', '')

            s = re.findall("[0-9_']+:\s\'([^']+)", r) + re.findall("\s*=\s*\"(http.+?)\"", r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s: s = re.findall("\(\w+\(\"([^\"]*)", r) + re.findall("\(\w+\(\'([^\']*)", r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]
            
            if not s: s = re.findall('\"\w+\":"([^"]*)', r) + re.findall('\'\w+\':\'([^\']*)', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s: s = re.findall('\s*=\s*\'(http.+?)\'', r) + re.findall('\s*=\s*\"(http.+?)\"', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s: s = re.findall('\s*:\s*\"(http.+?)\"', r) + re.findall('\s*:\s*\'(http.+?)\'', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s: s = re.findall('\s*\(\s*\"(http.+?)\"', r) + re.findall('\s*\(\s*\'(http.+?)\'', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s:s = re.findall('\s*:\s*\"(//.+?)\"', r) + re.findall('\s*:\s*\'(//.+?)\'', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s:s = re.findall('\:\"(\.+?)\"', r) + re.findall('\:\'(\.+?)\'', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s: s = re.findall('\s*\(\s*\"(//.+?)\"', r) + re.findall('\s*\(\s*\'(//.+?)\'', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s: s = re.findall('\s*=\s*\'(//.+?)\'', r) + re.findall('\s*=\s*\"(//.+?)\"', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s: s = re.findall('\w*:\s*\"(http.+?)\"', r) + re.findall('\w*:\s*\'(http.+?)\'', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]
            
            if not s: s = re.findall('\w*=\'([^\']*)', r) + re.findall('\w*=\"([^\"]*)', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]
            
            if not s: s = re.findall('\w*\s*=\s*\'([^\']*)', r) + re.findall('\w*\s*=\s*\"([^\"]*)', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]
            
            if not s: s = re.findall('(?s)<file>([^<]*)', r)
            s = [i for i in s if (urlparse(i).path).strip('/').split('/')[-1].split('.')[-1] in ['mp4', 'flv', 'm3u8']]

            if not s: s = client.parseDOM(r, 'source', ret='src', attrs = {'type': 'video.+?'})
            s = ['http:' + i if i.startswith('//') else i for i in s]
            s = [urljoin(url, i) if not i.startswith('http') else i for i in s]
            s = [x for y,x in enumerate(s) if x not in s[:y]]

            self.u = []
            def request(i):
                try:
                    i = i.replace(' ','%20')
                    c = client.request(i, output='headers')
                    checks = ['video','mpegurl','html','octet-stream']
                    if any(f for f in checks if f in c['Content-Type']): self.u.append((i, int(c['Content-Length'])))
                except:
                    pass
            threads = []
            for i in s: threads.append(workers.Thread(request, i))
            [i.start() for i in threads] ; [i.join() for i in threads]
            u = sorted(self.u, key=lambda x: x[1])[::-1]
            u = client.request(u[0][0], output='geturl', Referer=url)
            return u
        except:
            pass

    def weakspell(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('(?s)iframe frameborder.*?src="([^"]*)', page_data)[0]
            p = client.request(s)
            w = re.findall('url:\s*"([^"]*)', p)[0]
            h = re.findall('data:\s\{\s*"([^"]*)', p)[0]
            i = re.findall('var vidgstream = "([^"]*)', p)[0]
            t = re.findall('gethlsUrl\(vidgstream,\s([^,]*)', p)[0]
            e = re.findall('gethlsUrl\(vidgstream,(?:[^,]*),\s([^\)]*)', p)[0]
            hat = w + '?' + h + '=' + i + '&serverid=' + t + '&cid=' + e
            the = client.request(hat)
            crew = re.findall('{"rawUrl":"([^"]*)', the)[0]
            made = crew.replace('\\', '')
            return made + '?&connection=keepalive' + '|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.15%3B%20rv%3A131.0)%20Gecko%2F20100101%20Firefox%2F131.0&Referer=https%3A%2F%2Fmethstreams.to%2F'
        except:
            return

#link  
    def crackstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url, headers={"Referer": url, "User-Agent": 'Mozilla/5.0'})
            h = re.findall('(?s)<iframe.*?src="([^"]*)', page_data)[0]
            if 'givemereddit' in h:
                gr = requests.get(h).text
                i = re.compile(r'decodeURIComponent\(escape\(r\)\)}\("([^"]*)",([^,]*),"([^"]*)",([^,]*),([^,]*),([^\)]*)').findall(gr)[0]
                t = hunter.hunter(i[0], int(i[1]), i[2], int(i[3]), int(i[4]), int(i[5]))
                e = re.findall('source:\s*\'([^\']*)',t)[0]
                e = e.replace('\\','')
                return e + '|Referer=https://givemereddit.link/&Origin=https://givemereddit.link&User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36&Accept=application/x-mpegURL,*/*'
            else:
                x = client.request(h)
                w = re.findall('(?s)atob\(\'([^\']*)', x)[0]; w = base64.b64decode(w).decode('utf-8')   
                u = re.findall('initURL\s*=\s*"([^"]*)', w)[0]
                return u + '|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.15%3B%20rv%3A131.0)%20Gecko%2F20100101%20Firefox%2F131.0&Referer=' + h
        except:
            return

    def csis(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('<iframe.*?src="([^"]*)', page_data)[0]
            #h = url + w
            i = client.request(w)
        except: pass
        try:
            e = re.findall('atob\(["|\']([^"|\']*)', i)[0]; e = base64.b64decode(e).decode('utf-8')
        except: pass
        try:
            e = re.findall('var PLAYBACK_URL = \'([^\']*)', i)[0]
        except: pass
        return e + '|User-Agent=Mozilla/5.0&Referer=' + w

#link  
    def hesgoal(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            t = re.findall('(?s)<iframe(?:.*?src)="([^"]*)', page_data)[0]
            u = requests.get(t).text
            x = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', u)[0]
            return x + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=https://fordems.biz/'
        except:
            return
#link
    def givemereddit(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = requests.get(url).text
            w = re.findall('(?s)iframe class="embed-responsive-item" src="([^"]*)', u)[0]
            h = requests.get(w, headers={"Referer": w, "User-Agent": 'Mozilla/5.0'}).text
            i = re.compile(r'decodeURIComponent\(escape\(r\)\)}\("([^"]*)",([^,]*),"([^"]*)",([^,]*),([^,]*),([^\)]*)').findall(h)[0]
            t = hunter.hunter(i[0], int(i[1]), i[2], int(i[3]), int(i[4]), int(i[5]))
            e = re.findall('source:\s*\'([^\']*)',t)[0]
            e = e.replace('\\','')
            return e + '||Referer=https://givemereddit.link/&Origin=https://givemereddit.link&User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36&Accept=application/x-mpegURL,*/*'
        except:
            return

#link
    def givememma(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = client.request(url) 
            r = re.findall('(?s)<iframe class.*?src="([^"]*)', u)[0]
            w = client.request(r)
            x = re.findall(' source: \'([^\']*)', w)[0]
            return x + '|User-Agent=Mozilla/5.0&Referer=' + r
        except:
            return
#link
    def buff(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url, headers={'User-Agent':'Mozilla/5.0'})
            reg = re.findall('(?s)<iframe(?:.*?src)="([^"]*)', page_data)[0]
            page = client.request(reg, headers={'User-Agent':'Mozilla/5.0','Referer':url})
            find = re.findall('source: atob\(\'([^\']*)', page)[0]
            find = base64.b64decode(find).decode('utf-8')
            return find + '|User-Agent=Mozilla/5.0&Referer=' + reg
        except:
            return

#list:url and title
    def boxingfightsvideos(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = client.request(url)
            e = re.findall('(?s)<iframe(?:.*?src="([^"]*))', u)
            e = [(i,i.split('//')[-1].split('/')[0]) for i in e]
            e = [(i[0].replace('http:','').replace('https:','').replace('//','https://'),'[COLOR dodgerblue]Source: [/COLOR]'+i[1].replace('www.','').replace('.com','')) for i in e]
            return e
        except:
            return

    def topstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('var hlsurl=\'([^\']*)', page_data)[0]
            h = re.findall('var server=\'([^\']*)', page_data)[0]
            i = re.findall('var hlsurl=\'(?:[^\']*)\'(?:[^\']*)\'([^\']*)', page_data)[0]
            t = re.findall('var key= \'([^\']*)', page_data)[0]
            e = re.findall('var hlsurl=\'(?:[^\']*)\'(?:[^\']*)\'(?:[^\']*)\'(?:[^\']*)\'([^\']*)', page_data)[0]
            return w + h + i + t + e
        except:
            return

    def topstreamsnfl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('\}\s*var hlsurl=\'([^\']*)', page_data)[0]
            h = re.findall('-1\';\s*var server=\'([^\']*)', page_data)[0]
            i = re.findall('}\s*var hlsurl=\'(?:[^\']*)\'(?:[^\']*)\'([^\']*)', page_data)[0]
            t = re.findall('(?s)var safety=.*?y= \'([^\']*)', page_data)[0]
            e = re.findall('\}\s*var hlsurl=\'(?:[^\']*)\'(?:[^\']*)\'(?:[^\']*)\'(?:[^\']*)\'([^\']*)', page_data)[0]
            return w + h + i + t + e
        except:
            return

    def ripple(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('(?s)"><iframe.*?src="([^"]*)', page_data)[0]
            t = requests.get(s).text
            r = re.findall('source: \'([^\']*)', t)[0]
            r = r.replace('png','m3u8')
            if 'http' not in r:
                r = 'http://cdn.runid.xyz/' + r
            return r + '|Referer=' + s
            #return 'http://cdn.runid.xyz/' + r + '|Referer=' + s
        except:
            return

    def streameast(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('(?s)<iframe[^>]+src="([^"]+)', page_data)[0]
            t = requests.get(s,headers={'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/125 Safari/537.36','Referer':url}).text
            w = re.findall('atob\(\'([^\']*)', t)[0];w = base64.b64decode(w).decode('utf-8')
            return w + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36&Referer=https://gooz.aapmains.net/&Origin=https://gooz.aapmains.net'
        except:
            return

    def skuanet(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('<source src="([^"]*)', page_data)[0]
            return r + '?&connection=keepalive' + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + url
        except:
            return

    def hdstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('<iframe f.*?(?:source|src|file)=\s*[\'"]([^\'"]+)', page_data)[0]
            u = client.request(r)
            x = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', u)[0]
            return x + '|User-Agent=iPad&Referer=' + r
        except:
            return

    def tvnba(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=' + url
        except:
            return

    def tvnfl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('atob\(["|\']([^"|\']*)', page_data)[0]
            r = base64.b64decode(r).decode('utf-8')
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=' + url 
        except:
            return

    def tvncaaf(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)atob\("([^"]*)', page_data)[0]
            r = base64.b64decode(r).decode('utf-8')
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=http://123tvsports.com/category/ncaaf-streams/' 
        except:
            return

    def tvnhl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #token = client.request('http://continuum.watch/Crew/nhl.txt')
            #nhl_auth = "|Cookie=Authorization=" + token
            nhl_auth = "|Cookie=Authorization=" + 'eyJhbGciOiJIUzI1NiJ9.eyJpcGlkIjoibmhsR2F0ZXdheUlkOjY3NzM0NTYiLCJjbGllbnRJZCI6ImFjdGl2YXRpb25fbmhsLXYxLjAuMCIsInBjX21heF9yYXRpbmdfbW92aWUiOiIiLCJjb250ZXh0Ijp7fSwidmVyaWZpY2F0aW9uTGV2ZWwiOjIsImV4cCI6MTY3MzgwOTkxMywidHlwZSI6IlVzZXIiLCJpYXQiOjE2NDIyNzM5MTMsInVzZXJpZCI6ImY0NDcwNTAyLTJkYWEtNDgzMS1iOWVhLTgyZTY0NDFmNTkzOS0zMTctYmQ2MGJjZjI2YTQ4MTQ4YjFkODljNmVlZTUyYTNiOWM5MjllYzc3YiIsInZlcnNpb24iOiJ2MS4wIiwicGNfbWF4X3JhdGluZ190diI6IiIsImVtYWlsIjoiYmc2NjE1QGdtYWlsLmNvbSJ9.ameiawUY4YxQLGF0e9-kLlsug8czcjAdiahGr3HwwvM;mediaAuth_v2=6455209108eaa22507b1b305ff7466270d11c4e1da95b073ba26d541692f17953320772ffa0eba4a000575f2095c9e94fc3511dd9de884109f1bf8cfec7db5a90f25f525537e58c0ce68b4587f94c28ed01bab51ec0d355a0f0e95595434fd39b0cbadd368136229ae6956fc8020bd342f2a1fa6ceb7eded883b08c967a21391862ffb6ee48c0924a87b874c97e4d5e53cb37a67b62203dc916d2530a5c13c30ebf76b13b0e6996f06345bf6a88a97f29c493c5c7768311023d1e8c3cad5130ada0e56ee4e27df63f7c3e1104e87a13b1e4fba3d4d1e1130d27aba5cd34fdd812913520d8811972d05ec90e8b8b6343419cb74e063a3e05cef3272bc8d9c44c46cfb641a306ca78b4c677809171a36b9202630d72f01e502dfb1a5487d2ea586499a718679782a65e6a6800f77eea39fc6d3c544d512160eab8689984ae7084b23c6adbcda40c35bcc813ee744594de07fabae81c127628907e5412dabc14bf05a658aaa90000a78295a1f0f14e644073a757ab7f0092d95c2a5e37a65d8f18eea0f7690a6d3ba27b1a28e421cb51ae7a213c3e2ce6372b135d4059fd9372929fbd9243c93b28b8767a28480cbdc0c360706b508ea9b94de85fea1a410ecac6031bbe31220910200eb587c82fb2c0e6cb23af904a4080b4037e246c9ec1d9daaebacb17d684bc726;192051129147321142019199714547152015'
            r = re.findall('source:\s*"([^"]*)', page_data)[0]
            if 'master_wired60' not in r:
                return r + '|Referer=http://bestsolaris.com/'
            else :
                 r = r.replace('master_wired60','5600K/5600_slide')
                 return r + nhl_auth
        except:
            return

    def tvmma(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)atob\("([^"]*)', page_data)[0]
            r = base64.b64decode(r).decode('utf-8')
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=http://123tvsports.com/category/mma-streams/' 
        except:
            return

    def tvboxing(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)atob\("([^"]*)', page_data)[0]
            r = base64.b64decode(r).decode('utf-8')
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=http://123tvsports.com/category/boxing-streams/' 
        except:
            return

    def tvf1(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)atob\("([^"]*)', page_data)[0]
            r = base64.b64decode(r).decode('utf-8')
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=http://123tvsports.com/category/f1-streams/' 
        except:
            return

    def yss(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?s)<iframe frameborder=0 height=100% width=100% src="([^"]*)', page_data)[0]
            h = client.request(w)
            i = re.findall('\}\s(?:.*?var)(?:[^\']*)\'([^\']*)', h)[0]
            t = base64.b64decode(i).decode('utf-8')
            if t.startswith('/'): t = 'http://yoursports.stream' + t
            return t + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0&Referer=' + w
        except:
            return

    def ssnhl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #token = client.request('http://continuum.watch/Crew/nhl.txt')
            nhl_auth = "|Cookie=Authorization=" + 'eyJhbGciOiJIUzI1NiJ9.eyJpcGlkIjoibmhsR2F0ZXdheUlkOjY3NzM0NTYiLCJjbGllbnRJZCI6ImFjdGl2YXRpb25fbmhsLXYxLjAuMCIsInBjX21heF9yYXRpbmdfbW92aWUiOiIiLCJjb250ZXh0Ijp7fSwidmVyaWZpY2F0aW9uTGV2ZWwiOjIsImV4cCI6MTY3MzgwOTkxMywidHlwZSI6IlVzZXIiLCJpYXQiOjE2NDIyNzM5MTMsInVzZXJpZCI6ImY0NDcwNTAyLTJkYWEtNDgzMS1iOWVhLTgyZTY0NDFmNTkzOS0zMTctYmQ2MGJjZjI2YTQ4MTQ4YjFkODljNmVlZTUyYTNiOWM5MjllYzc3YiIsInZlcnNpb24iOiJ2MS4wIiwicGNfbWF4X3JhdGluZ190diI6IiIsImVtYWlsIjoiYmc2NjE1QGdtYWlsLmNvbSJ9.ameiawUY4YxQLGF0e9-kLlsug8czcjAdiahGr3HwwvM;mediaAuth_v2=6455209108eaa22507b1b305ff7466270d11c4e1da95b073ba26d541692f17953320772ffa0eba4a000575f2095c9e94fc3511dd9de884109f1bf8cfec7db5a90f25f525537e58c0ce68b4587f94c28ed01bab51ec0d355a0f0e95595434fd39b0cbadd368136229ae6956fc8020bd342f2a1fa6ceb7eded883b08c967a21391862ffb6ee48c0924a87b874c97e4d5e53cb37a67b62203dc916d2530a5c13c30ebf76b13b0e6996f06345bf6a88a97f29c493c5c7768311023d1e8c3cad5130ada0e56ee4e27df63f7c3e1104e87a13b1e4fba3d4d1e1130d27aba5cd34fdd812913520d8811972d05ec90e8b8b6343419cb74e063a3e05cef3272bc8d9c44c46cfb641a306ca78b4c677809171a36b9202630d72f01e502dfb1a5487d2ea586499a718679782a65e6a6800f77eea39fc6d3c544d512160eab8689984ae7084b23c6adbcda40c35bcc813ee744594de07fabae81c127628907e5412dabc14bf05a658aaa90000a78295a1f0f14e644073a757ab7f0092d95c2a5e37a65d8f18eea0f7690a6d3ba27b1a28e421cb51ae7a213c3e2ce6372b135d4059fd9372929fbd9243c93b28b8767a28480cbdc0c360706b508ea9b94de85fea1a410ecac6031bbe31220910200eb587c82fb2c0e6cb23af904a4080b4037e246c9ec1d9daaebacb17d684bc726;192051129147321142019199714547152015'
            #the = re.findall('<iframe sandbox.*?src="([^"]*)', page_data)[0]
            #crew = client.request(the)
            #white = re.findall('(?s)var sou.*?"([^"]*)', crew)[0]
            white = re.findall('(?s)var sou.*?"([^"]*)', page_data)[0]
            white = white.replace('master_wired60','5600K/5600_slide')
            return white + nhl_auth
        except:
            return

    def ssnba(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)<iframe.*?src="([^"]*)', page_data)[0]
            s = client.request(r)
            white = re.findall('(?s)source:\s\'([^\']*)', s)[0]
            return white + '|User-Agent=iPad&Referer=' + r
        except:
            return

    def everysportsnhl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #token = client.request('http://continuum.watch/Crew/nhl.txt')
            nhl_auth = "|Cookie=Authorization=" + 'eyJhbGciOiJIUzI1NiJ9.eyJpcGlkIjoibmhsR2F0ZXdheUlkOjY3NzM0NTYiLCJjbGllbnRJZCI6ImFjdGl2YXRpb25fbmhsLXYxLjAuMCIsInBjX21heF9yYXRpbmdfbW92aWUiOiIiLCJjb250ZXh0Ijp7fSwidmVyaWZpY2F0aW9uTGV2ZWwiOjIsImV4cCI6MTY3MzgwOTkxMywidHlwZSI6IlVzZXIiLCJpYXQiOjE2NDIyNzM5MTMsInVzZXJpZCI6ImY0NDcwNTAyLTJkYWEtNDgzMS1iOWVhLTgyZTY0NDFmNTkzOS0zMTctYmQ2MGJjZjI2YTQ4MTQ4YjFkODljNmVlZTUyYTNiOWM5MjllYzc3YiIsInZlcnNpb24iOiJ2MS4wIiwicGNfbWF4X3JhdGluZ190diI6IiIsImVtYWlsIjoiYmc2NjE1QGdtYWlsLmNvbSJ9.ameiawUY4YxQLGF0e9-kLlsug8czcjAdiahGr3HwwvM;mediaAuth_v2=6455209108eaa22507b1b305ff7466270d11c4e1da95b073ba26d541692f17953320772ffa0eba4a000575f2095c9e94fc3511dd9de884109f1bf8cfec7db5a90f25f525537e58c0ce68b4587f94c28ed01bab51ec0d355a0f0e95595434fd39b0cbadd368136229ae6956fc8020bd342f2a1fa6ceb7eded883b08c967a21391862ffb6ee48c0924a87b874c97e4d5e53cb37a67b62203dc916d2530a5c13c30ebf76b13b0e6996f06345bf6a88a97f29c493c5c7768311023d1e8c3cad5130ada0e56ee4e27df63f7c3e1104e87a13b1e4fba3d4d1e1130d27aba5cd34fdd812913520d8811972d05ec90e8b8b6343419cb74e063a3e05cef3272bc8d9c44c46cfb641a306ca78b4c677809171a36b9202630d72f01e502dfb1a5487d2ea586499a718679782a65e6a6800f77eea39fc6d3c544d512160eab8689984ae7084b23c6adbcda40c35bcc813ee744594de07fabae81c127628907e5412dabc14bf05a658aaa90000a78295a1f0f14e644073a757ab7f0092d95c2a5e37a65d8f18eea0f7690a6d3ba27b1a28e421cb51ae7a213c3e2ce6372b135d4059fd9372929fbd9243c93b28b8767a28480cbdc0c360706b508ea9b94de85fea1a410ecac6031bbe31220910200eb587c82fb2c0e6cb23af904a4080b4037e246c9ec1d9daaebacb17d684bc726;192051129147321142019199714547152015'
            nhl_auth = "|Cookie=Authorization=" + token
            r = re.findall('source: \'([^\']*)', page_data)[0]
            r = r.replace('master_wired60','5600K/5600_slide')
            return r + nhl_auth
        except:
            return

    def everysportsmlb(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            token = client.request('http://172.105.26.201/mlbs.txt')
            r = re.findall('source: \'([^\']*)', page_data)[0]
            r = r.replace('master_wired60','5600K/5600_slide')
            return r + '|User-Agent=iPad&Authorization=' + token
        except:
            return

    def playoffnhl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #token = client.request('http://continuum.watch/Crew/nhl.txt')
            #nhl_auth = "|Cookie=Authorization=" + token
            nhl_auth = "|Cookie=Authorization=" + 'eyJhbGciOiJIUzI1NiJ9.eyJpcGlkIjoibmhsR2F0ZXdheUlkOjY3NzM0NTYiLCJjbGllbnRJZCI6ImFjdGl2YXRpb25fbmhsLXYxLjAuMCIsInBjX21heF9yYXRpbmdfbW92aWUiOiIiLCJjb250ZXh0Ijp7fSwidmVyaWZpY2F0aW9uTGV2ZWwiOjIsImV4cCI6MTY3MzgwOTkxMywidHlwZSI6IlVzZXIiLCJpYXQiOjE2NDIyNzM5MTMsInVzZXJpZCI6ImY0NDcwNTAyLTJkYWEtNDgzMS1iOWVhLTgyZTY0NDFmNTkzOS0zMTctYmQ2MGJjZjI2YTQ4MTQ4YjFkODljNmVlZTUyYTNiOWM5MjllYzc3YiIsInZlcnNpb24iOiJ2MS4wIiwicGNfbWF4X3JhdGluZ190diI6IiIsImVtYWlsIjoiYmc2NjE1QGdtYWlsLmNvbSJ9.ameiawUY4YxQLGF0e9-kLlsug8czcjAdiahGr3HwwvM;mediaAuth_v2=6455209108eaa22507b1b305ff7466270d11c4e1da95b073ba26d541692f17953320772ffa0eba4a000575f2095c9e94fc3511dd9de884109f1bf8cfec7db5a90f25f525537e58c0ce68b4587f94c28ed01bab51ec0d355a0f0e95595434fd39b0cbadd368136229ae6956fc8020bd342f2a1fa6ceb7eded883b08c967a21391862ffb6ee48c0924a87b874c97e4d5e53cb37a67b62203dc916d2530a5c13c30ebf76b13b0e6996f06345bf6a88a97f29c493c5c7768311023d1e8c3cad5130ada0e56ee4e27df63f7c3e1104e87a13b1e4fba3d4d1e1130d27aba5cd34fdd812913520d8811972d05ec90e8b8b6343419cb74e063a3e05cef3272bc8d9c44c46cfb641a306ca78b4c677809171a36b9202630d72f01e502dfb1a5487d2ea586499a718679782a65e6a6800f77eea39fc6d3c544d512160eab8689984ae7084b23c6adbcda40c35bcc813ee744594de07fabae81c127628907e5412dabc14bf05a658aaa90000a78295a1f0f14e644073a757ab7f0092d95c2a5e37a65d8f18eea0f7690a6d3ba27b1a28e421cb51ae7a213c3e2ce6372b135d4059fd9372929fbd9243c93b28b8767a28480cbdc0c360706b508ea9b94de85fea1a410ecac6031bbe31220910200eb587c82fb2c0e6cb23af904a4080b4037e246c9ec1d9daaebacb17d684bc726;192051129147321142019199714547152015'
            r = re.findall('(?s)= "https:\/\/([^"]*)', page_data)[0]
            r = r.replace('hlslive','https://hlslive')
            return r + nhl_auth
        except:
            return
    
    def playoffnfl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            iframe_source_url = re.findall("embed-responsive-item\" src='([^']*)", page_data)[0]
            iframe_data = requests.get(iframe_source_url).text
            pdettxt = re.findall('pdettxt = "([^"]*)', iframe_data)[0]
            zmid = re.findall('zmid = "([^"]*)', iframe_data)[0]
            pid = re.findall("pid = ([0-9])", iframe_data)[0]
            edm = re.findall('edm = "([^"]*)', iframe_data)[0]
            embed_script_url = re.findall('<script\\W*async\\W*src="([^"]*)', iframe_data)[0]
            url="https://"+edm+"/sd0embed?v=" + zmid
            embed_source_data = requests.post(url, headers={"Origin": "https://embedstream.me", "Referer": "https://embedstream.me/", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0"}).text
            i = re.compile(r'decodeURIComponent\(escape.*\("(.+?)",(\d+),"(.+?)",(\d+),(\d+),(\d+)').findall(embed_source_data)[0]
            t = hunter.hunter(i[0], int(i[1]), i[2], int(i[3]), int(i[4]), int(i[5]))
            m3u8 = re.findall('const vdoUrl = \'([^\']*)',t)[0]
            m3u8 = base64.b64decode(m3u8).decode("UTF-8")
            unique_id = re.findall(r"const unqiueId = \'([^\']*)", t)[0]
            scode = re.findall(r'sCode = \'([^\']*)', t)[0]
            ts = re.findall(r'Ts = ([0-9]{10})', t)[0]
            # Unnessary call for now 
            key = 'https://key.seckeyserv.me/?stream=' + unique_id + '&scode=' + scode + '&expires=' + ts
            authUrl = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0', 'Origin': 'https://www.nolive.me','Referer': 'https://www.nolive.me/sd0embed'}
            return m3u8 + '|{0}'.format(urlencode(authUrl))
        except:
            return

    def seventwenty(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            iframe_source_url = re.findall('(?s)<iframe.*?rc="([^"]*)', page_data)[0]
            iframe_data = requests.get(iframe_source_url).text
            pdettxt = re.findall('pdettxt = "([^"]*)', iframe_data)[0]
            zmid = re.findall('zmid = "([^"]*)', iframe_data)[0]
            pid = re.findall("pid = ([0-9])", iframe_data)[0]
            edm = re.findall('edm = "([^"]*)', iframe_data)[0]
            embed_script_url = re.findall('<script\\W*async\\W*src="([^"]*)', iframe_data)[0]
            url="https://"+edm+"/sd0embed?v=" + zmid
            embed_source_data = requests.post(url, headers={"Origin": "https://embedstream.me", "Referer": "https://embedstream.me/", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0"}).text
            i = re.compile(r'decodeURIComponent\(escape.*\("(.+?)",(\d+),"(.+?)",(\d+),(\d+),(\d+)').findall(embed_source_data)[0]
            t = hunter.hunter(i[0], int(i[1]), i[2], int(i[3]), int(i[4]), int(i[5]))
            m3u8 = re.findall('const vdoUrl = \'([^\']*)',t)[0]
            m3u8 = base64.b64decode(m3u8).decode("UTF-8")
            unique_id = re.findall(r"const unqiueId = \'([^\']*)", t)[0]
            scode = re.findall(r'sCode = \'([^\']*)', t)[0]
            ts = re.findall(r'Ts = ([0-9]{10})', t)[0]
            # Unnessary call for now 
            #key = 'https://key.seckeyserv.me/?stream=' + unique_id + '&scode=' + scode + '&expires=' + ts
            authUrl = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0', 'Origin': 'https://www.nolive.me','Referer': 'https://www.nolive.me/sd0embed'}
            return m3u8 + '|{0}'.format(urlencode(authUrl))
        except:
            return
                
    def watchkobestreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url,headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 6.0; WOW64; rv:24.0) Gecko/20100101 Firefox/24.0' })
            iframe_source_url = re.findall('(?s)<iframe.*?rc="([^"]*)', page_data)[0]
            embed_r = requests.get(iframe_source_url,headers = { 'User-Agent': 'Mozilla/5.0 (Windows NT 6.0; WOW64; rv:24.0) Gecko/20100101 Firefox/24.0' }).text
            embed_stream = re.findall('(?s)<iframe.*?rc="([^"]*)', embed_r)[0]
            iframe_data = requests.get(embed_stream).text
            pdettxt = re.findall('pdettxt = "([^"]*)', iframe_data)[0]
            zmid = re.findall('zmid = "([^"]*)', iframe_data)[0]
            pid = re.findall("pid = ([0-9])", iframe_data)[0]
            edm = re.findall('edm = "([^"]*)', iframe_data)[0]
            embed_script_url = re.findall('<script\\W*async\\W*src="([^"]*)', iframe_data)[0]
            url="https://"+edm+"/sd0embed?v=" + zmid
            embed_source_data = requests.post(url, headers={"Origin": "https://embedstream.me", "Referer": "https://embedstream.me/", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0"}).text
            i = re.compile(r'decodeURIComponent\(escape.*\("(.+?)",(\d+),"(.+?)",(\d+),(\d+),(\d+)').findall(embed_source_data)[0]
            t = hunter.hunter(i[0], int(i[1]), i[2], int(i[3]), int(i[4]), int(i[5]))
            m3u8 = re.findall('const vdoUrl = \'([^\']*)',t)[0]
            m3u8 = base64.b64decode(m3u8).decode("UTF-8")
            unique_id = re.findall(r"const unqiueId = \'([^\']*)", t)[0]
            scode = re.findall(r'sCode = \'([^\']*)', t)[0]
            ts = re.findall(r'Ts = ([0-9]{10})', t)[0]
            # Unnessary call for now 
            #key = 'https://key.seckeyserv.me/?stream=' + unique_id + '&scode=' + scode + '&expires=' + ts
            authUrl = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0', 'Origin': 'https://www.nolive.me','Referer': 'https://www.nolive.me/sd0embed'}
            return m3u8 + '|{0}'.format(urlencode(authUrl))
        except:
            return

    def myustv(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('atob\(["|\']([^"|\']*)', page_data)[0]; r = base64.b64decode(r).decode('utf-8')
            return r + '|User-Agent=iPad&Referer=' + url
        except:
            return

    def livenhl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #token = client.request('http://continuum.watch/Crew/nhl.txt')
            #nhl_auth = "|Cookie=Authorization=" + token
            nhl_auth = "|Cookie=Authorization=" + 'eyJhbGciOiJIUzI1NiJ9.eyJpcGlkIjoibmhsR2F0ZXdheUlkOjY3NzM0NTYiLCJjbGllbnRJZCI6ImFjdGl2YXRpb25fbmhsLXYxLjAuMCIsInBjX21heF9yYXRpbmdfbW92aWUiOiIiLCJjb250ZXh0Ijp7fSwidmVyaWZpY2F0aW9uTGV2ZWwiOjIsImV4cCI6MTY3MzgwOTkxMywidHlwZSI6IlVzZXIiLCJpYXQiOjE2NDIyNzM5MTMsInVzZXJpZCI6ImY0NDcwNTAyLTJkYWEtNDgzMS1iOWVhLTgyZTY0NDFmNTkzOS0zMTctYmQ2MGJjZjI2YTQ4MTQ4YjFkODljNmVlZTUyYTNiOWM5MjllYzc3YiIsInZlcnNpb24iOiJ2MS4wIiwicGNfbWF4X3JhdGluZ190diI6IiIsImVtYWlsIjoiYmc2NjE1QGdtYWlsLmNvbSJ9.ameiawUY4YxQLGF0e9-kLlsug8czcjAdiahGr3HwwvM;mediaAuth_v2=6455209108eaa22507b1b305ff7466270d11c4e1da95b073ba26d541692f17953320772ffa0eba4a000575f2095c9e94fc3511dd9de884109f1bf8cfec7db5a90f25f525537e58c0ce68b4587f94c28ed01bab51ec0d355a0f0e95595434fd39b0cbadd368136229ae6956fc8020bd342f2a1fa6ceb7eded883b08c967a21391862ffb6ee48c0924a87b874c97e4d5e53cb37a67b62203dc916d2530a5c13c30ebf76b13b0e6996f06345bf6a88a97f29c493c5c7768311023d1e8c3cad5130ada0e56ee4e27df63f7c3e1104e87a13b1e4fba3d4d1e1130d27aba5cd34fdd812913520d8811972d05ec90e8b8b6343419cb74e063a3e05cef3272bc8d9c44c46cfb641a306ca78b4c677809171a36b9202630d72f01e502dfb1a5487d2ea586499a718679782a65e6a6800f77eea39fc6d3c544d512160eab8689984ae7084b23c6adbcda40c35bcc813ee744594de07fabae81c127628907e5412dabc14bf05a658aaa90000a78295a1f0f14e644073a757ab7f0092d95c2a5e37a65d8f18eea0f7690a6d3ba27b1a28e421cb51ae7a213c3e2ce6372b135d4059fd9372929fbd9243c93b28b8767a28480cbdc0c360706b508ea9b94de85fea1a410ecac6031bbe31220910200eb587c82fb2c0e6cb23af904a4080b4037e246c9ec1d9daaebacb17d684bc726;192051129147321142019199714547152015'
            x = re.findall('(?s)<iframe(?:.*?c=)\'([^\']*)', page_data)[0]
            w = client.request(x)
            r = re.findall('var source = "([^"]*)', w)[0]
            r = r.replace('master_wired60','5600K/5600_slide')
            return r + nhl_auth
        except:
            return

    def sportsbay(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            x = re.findall('(?s)<iframe(?:.*?c=)\'([^\']*)', page_data)[0]
            w = client.request(x)
            r = re.findall('var source = {   \'hls\':\'([^\']*)', w)[0]
            return r + '|User-Agent=Mozilla/5.0&Referer=' + x
        except:
            return

    def tennislive(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            x = re.findall('(?s)<iframe.*?src=\'([^\']*)', page_data)[0]
            w = client.request(x)
            r = re.findall('Player\({\s*source:\s*\'([^\']*)', w)[0]
            return r + '|User-Agent=Mozilla/5.0&Referer=' + x
        except:
            return

    def sports24nhl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #token = client.request('http://continuum.watch/Crew/nhl.txt')
            #nhl_auth = "|Cookie=Authorization=" + token
            nhl_auth = "|Cookie=Authorization=" + 'eyJhbGciOiJIUzI1NiJ9.eyJpcGlkIjoibmhsR2F0ZXdheUlkOjY3NzM0NTYiLCJjbGllbnRJZCI6ImFjdGl2YXRpb25fbmhsLXYxLjAuMCIsInBjX21heF9yYXRpbmdfbW92aWUiOiIiLCJjb250ZXh0Ijp7fSwidmVyaWZpY2F0aW9uTGV2ZWwiOjIsImV4cCI6MTY3MzgwOTkxMywidHlwZSI6IlVzZXIiLCJpYXQiOjE2NDIyNzM5MTMsInVzZXJpZCI6ImY0NDcwNTAyLTJkYWEtNDgzMS1iOWVhLTgyZTY0NDFmNTkzOS0zMTctYmQ2MGJjZjI2YTQ4MTQ4YjFkODljNmVlZTUyYTNiOWM5MjllYzc3YiIsInZlcnNpb24iOiJ2MS4wIiwicGNfbWF4X3JhdGluZ190diI6IiIsImVtYWlsIjoiYmc2NjE1QGdtYWlsLmNvbSJ9.ameiawUY4YxQLGF0e9-kLlsug8czcjAdiahGr3HwwvM;mediaAuth_v2=6455209108eaa22507b1b305ff7466270d11c4e1da95b073ba26d541692f17953320772ffa0eba4a000575f2095c9e94fc3511dd9de884109f1bf8cfec7db5a90f25f525537e58c0ce68b4587f94c28ed01bab51ec0d355a0f0e95595434fd39b0cbadd368136229ae6956fc8020bd342f2a1fa6ceb7eded883b08c967a21391862ffb6ee48c0924a87b874c97e4d5e53cb37a67b62203dc916d2530a5c13c30ebf76b13b0e6996f06345bf6a88a97f29c493c5c7768311023d1e8c3cad5130ada0e56ee4e27df63f7c3e1104e87a13b1e4fba3d4d1e1130d27aba5cd34fdd812913520d8811972d05ec90e8b8b6343419cb74e063a3e05cef3272bc8d9c44c46cfb641a306ca78b4c677809171a36b9202630d72f01e502dfb1a5487d2ea586499a718679782a65e6a6800f77eea39fc6d3c544d512160eab8689984ae7084b23c6adbcda40c35bcc813ee744594de07fabae81c127628907e5412dabc14bf05a658aaa90000a78295a1f0f14e644073a757ab7f0092d95c2a5e37a65d8f18eea0f7690a6d3ba27b1a28e421cb51ae7a213c3e2ce6372b135d4059fd9372929fbd9243c93b28b8767a28480cbdc0c360706b508ea9b94de85fea1a410ecac6031bbe31220910200eb587c82fb2c0e6cb23af904a4080b4037e246c9ec1d9daaebacb17d684bc726;192051129147321142019199714547152015'
            u = re.findall('(?s)id="playframe">(?:.*?src)="([^"]*)', page_data)[0]
            b = 'https:'+u
            b = b.replace(' ', '%20')
            x = client.request(b)
            l = re.findall('(?s)xurl\s=\satob\(\'([^\']*)', x)[0]; l = base64.b64decode(l).decode('utf-8')
            return l + nhl_auth
        except:
            return

    def sports24nba(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            l = re.findall('(?s)src = "(.*?)"', page_data)[0]; l = base64.b64decode(l).decode('utf-8')
            l = l.replace('https:','')
            l = l.replace('//','https://')
            if l.startswith('/'): l = 'https://sports24.club' + l
            return l + '|User-Agent=iPad&Referer=https://sports24.club/nba'
        except:
            return

    def sports24ncaab(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('<iframe id.*?src="([^"]*)', page_data)[0]
            h = client.request(w)
            l = re.findall('atob\(["|\']([^"|\']*)', h)[0]; l = base64.b64decode(l).decode('utf-8')
            l = l.replace('https:','')
            l = l.replace('//','https://')
            if l.startswith('/'): l = 'https://sports24.club' + l
            return l + '|User-Agent=iPad&Referer=' + w
        except:
            return

    def sports24nfl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            l = re.findall('(?s)src = "(.*?)"', page_data)[0]; l = base64.b64decode(l).decode('utf-8')
            l = l.replace('https:','')
            l = l.replace('//','https://')
            if l.startswith('/'): l = 'https://sports24.club' + l
            return l + '|User-Agent=iPad&Referer=https://sports24.club/nfl'
        except:
            return

    def sports24f1(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            l = re.findall('(?s)src = "(.*?)"', page_data)[0]; l = base64.b64decode(l).decode('utf-8')
            l = l.replace('https:','')
            l = l.replace('//','https://')
            if l.startswith('/'): l = 'https://sports24.club' + l
            return l + '|User-Agent=iPad&Referer=https://sports24.club/fl'
        except:
            return

    def sports24ncaa(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            l = re.findall('var xurl = atob\(\'([^\']*)', page_data)[0]; l = base64.b64decode(l).decode('utf-8')
            l = l.replace('https:','')
            l = l.replace('//','https://')
            if l.startswith('/'): l = 'https://sports24.club' + l
            return l + '|User-Agent=iPad&Referer=https://sports24.club/ncaa'
        except:
            return

    def markky(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(https?:\/\/[^\s]+\.m3u8)', page_data)[0]
            return r + '|User-Agent=iPad&Referer=' + url
        except:
            return

    def nbahdreplay(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('iframe(?:.*?src=")([^"]*)',page_data)[0]
            r = r.replace('//','https://')
            return r
        except:
            return
            
    def cric(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            p = client.request(url)
            r0 = re.findall('(?s)<tr><td>(?:[^<]*)<\/td><td><a href="([^"]*)',p)[0]
            p1 = client.request(r0)
            r1 = re.findall('<iframe src="([^"]*)',p1)[0];r1 = r1.replace('//','http://')
            p2 = client.request(r1)
            r2 = re.findall('fid="([^"]*)',p2)[0];r3 = re.findall('v_width=([^\;]*)',p2)[0];r4 = re.findall('v_height=([^\;]*)',p2)[0]
            embed = 'http://www.freecast123.com/cricsp.php?player=desktop&live='+r2+'&vw='+r3+'&vh='+r4
            u = client.request(embed, headers={'User-Agent':'iPad','Referer':r1})
            u = u.replace('\/','/');u = u.replace('",','');u = u.replace('"','');u = u.replace('//','http://')
            r = re.findall('return\(\[([^\]]*)',u)[0]; x = re.findall('\[(hlsendtime.*?)\]',u)[0]; z = re.findall('>(ash.*?)<',u)[0]
            return r + x + z
        except:
            return

    def tubby(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = client.request(url)
            r = re.findall('<iframe src="([^"]*)',u)[0]
            u2 = client.request(r)
            r2 = re.findall('videoLink = \'([^\']*)',u2)[0]
            return r2
        except:
            return

    def btstream(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = client.request(url)
            r = re.findall('(?s)<div class=\'player(?:[^"]*)"(?:[^"]*)"(?:[^"]*)"(?:[^"]*)"(?:[^"]*)"([^"]*)', u)[0]
            t = client.request(r)
            s = re.findall('atob\(["|\']([^"|\']*)', t)[0]
            s = base64.b64decode(s).decode('utf-8')
            return s + '|Referer=' + r
        except:
            return
            
    def jumbo(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = requests.get(url).text
            r = re.findall('<iframe src="([^"]*)',u)[0]
            u2 = requests.get(r).text
            r2 = re.findall('<iframe src="([^"]*)',u2)[0]
            page = requests.get(r2, headers={'User-Agent':'iPad','Referer':r}).text
            find = re.findall('(?s)<script>eval(.+?)<\/sc', page)[0]
            unpack = jsunpack.unpack(find)
            r3 = re.findall('source:"([^"]*)',unpack)[0]
            return r3
        except:
            return

    def mazy(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            i = re.findall('source = \'([^\']*)', page_data)[0]
            return i + '|Referer=' + url
        except:
            return

    def helena(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('source: "([^"]*)', page_data)[0]
            return w + '|Referer=' + url
        except:
            return

    def ice(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('iframe src="([^"]*)', page_data)[0]
            r = client.request(s)
            t = re.findall('replace\("([^"]*)', r)[0]
            w = re.findall('(?s)\)\;.*?var url = "([^"]*)', r)[0]
            return t + w + '|User-Agent=ipad&Referer=' + s
        except:
            return

    def papahd(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r1 = re.findall('(?s)<iframe src="([^"]*)',page_data)[0]
            u2 = requests.get(r1).text
            fid = re.findall('fid="([^"]*)',u2)[0]
            r3 = re.findall('(?s)fid.*?src="([^"]*)',u2)[0]
            u3 = requests.get('https:' + r3).text
            embedded = re.findall('(?s)embedded .*?: "([^"]*)',u3)[0]
            link = re.findall('(?s).*?src="([^=]*)',u3)[0]
            final_link = link + '=' + embedded + '&live=' + fid
            return final_link + '|User-Agent=iPad&Referer=' + r1
        except:
            return

    def fightpass(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            x = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return x + '|User-Agent=Mozilla/5.0&Referer=' + url
        except:
            return

    def solaris(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return r + '|User-Agent=Mozilla/5.0&Referer=' + url
        except:
            return

    def sportnews(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            l = re.findall('atob\(\'([^\']*)', page_data)[0]
            l = base64.b64decode(l).decode('utf-8')
            return l + '|User-Agent=Mozilla/5.0&Referer=' + url
        except:
            return

    def beast(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            white = re.findall('(?s)<iframe.*?src="([^"]*)', page_data)[0]
            hat = requests.get(white).text
            items = re.findall('=\\s*(\\[[^;]+)', hat)[0]
            items = re.findall('"(.+?)"', items)
            subitem = int(re.findall('atob.+?-\\s*(\\d+)', hat)[0])
            srp = ''
            for item in items:
                srp += chr(int(re.sub(r'[^\\d]', '', base64.b64decode(item).decode('utf-8'))) - subitem)
            link = re.findall("source: '([^']*)", srp)[0]
            return link + '|User-Agent=ipad&Referer=' + url
        except:
            return

    def elixx(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?s)iframe-wrapper">\s*<iframe src="([^"]*)',page_data)[0]
            h = 'http://elixx.xyz' + w
            i = requests.get(h).text
            t = re.findall('<iframe src="([^"]*)',i)[0]
            white = 'https:' + t
            e = requests.get(white, headers={'User-Agent':'iPad','Referer':t}).text
            z = re.findall('(?s)<iframe.*?src="([^"]*)',e)[0]
            hat = 'https:' + z
            pink = requests.get(hat, headers={'User-Agent':'iPad','Referer':t}).text
            find = re.findall('eval\(function(.+?m3u8.+)', pink)[0]
            the = jsunpack.unpack(find)
            crew= re.findall('src=\s*"([^"]*)',the)[0]
            return crew + '|User-Agent=iPad&Referer=' + h
        except:
            return

    def worldstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('<iframe.*?src="([^"]*)',page_data)[0]
            h = requests.get(w).text
            i = re.findall('<iframe src="([^"]*)',h)[0]
            e = requests.get(i, headers={'User-Agent':'iPad','Referer':i}).text
            crew = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', e)[0]
            #hat = re.findall('eval\(function(.+?m3u8.+)', e)[0]
            #the = jsunpack.unpack(hat)
            #crew= re.findall('source\s*:\s*"([^"]*)',the)[0]
            return crew + '|User-Agent=ipad&Referer=' + i
        except:
            return

    def nflup(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('var chunks_link = \'([^\']*)', page_data)[0]
            s = re.findall('var channelName = "([^"]*)', page_data)[0]
            return r + s + '_playlist.m3u8'
        except:
            return

    def nflsportz(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #r = re.findall('atob\(["|\']([^"|\']*)', page_data)[0]
            #r = base64.b64decode(r).decode('utf-8')
            #return r + '|User-Agent=Mozilla/5.0&Referer=' + url
            src = re.findall('iframe.*?src="([^"]*)', page_data)[0]
            src = 'http:' + src if src.startswith('//') else src
            fu = requests.get(src, headers={'User-Agent':'iPad','Referer':url}).text
            hat = re.findall('eval\(function(.+?m3u8.+)', fu)[0]
            the = jsunpack.unpack(hat)
            crew= re.findall('var\s*src="([^"]*)',the)[0]
            return crew + '|User-Agent=Mozilla/5.0&Referer=' + url
        except:
            return

    def blacktienfl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #r = re.findall('<iframe src="([^"]*)', page_data)[0]
            r = re.findall('<iframe id="stream.*?src="([^"]*)', page_data)[0]  
            u = client.request(r)
            q = re.findall('(?:source|src|file):\s*[\'"]([^\'"]*)',u)[0]
            return q + '|User-Agent=ipad&Referer=' + r
        except:
            return

    def blacktienba(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            if 'm3u8' in page_data:
                link = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
                return link + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36&Origin=http://blacktiesports.net&Referer=' + url                  
            elif 'php' in page_data:
                r = re.findall('(?s)<iframe id="stream.*?src="([^"]*)', page_data)[0]
                u = client.request(r)
                items = re.findall('<script>var.*?=\s*(\[[^;]+)', u)[0]
                items = re.findall('"(.+?)"', items)
                subitem = int(re.findall('\(atob.+?-\s*(\d+)', u)[0])
                srp = ''
                for item in items:
                    srp += chr(int(re.sub(r'[^\d]', '', base64.b64decode(item).decode('utf-8'))) - subitem)
                #link = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', srp)[0]
                link = re.findall('atob\(\'([^\']*)', srp)[0]
                link = link.replace(' ','')
                link = base64.b64decode(link).decode('utf-8')
                return link + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36&Origin=http://blacktiesports.net&Referer=' + r
            else:
                items = re.findall('<script>var.*?=\s*(\[[^;]+)', page_data)[0]
                items = re.findall('"(.+?)"', items)
                subitem = int(re.findall('\(atob.+?-\s*(\d+)', page_data)[0])
                srp = ''
                for item in items:
                    srp += chr(int(re.sub(r'[^\d]', '', base64.b64decode(item).decode('utf-8'))) - subitem)
                link = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', srp)[0]
                link = link.replace(' ','')
                return link + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36&Origin=http://blacktiesports.net&Referer=' + url
        except:
            return

    def ufckhabib(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            t = re.findall('(?s)iframe f.*?src="([^"]*)', page_data)[0]
            fu = requests.get(t).text
            w = re.findall('atob\(\'([^\']*)', fu)[0]
            s = base64.b64decode(w).decode('utf-8')
            return s + '|User-Agent=ipad&Referer=' + t
        except:
            return

    def daddylive(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            hat = re.findall('(?s)iframe src="(?:[^=]*)=([^"]*)',page_data)[0]
            #return 'https://i-am-so-cool.licenses4.me/cdn/premium' + hat + '/chunks.m3u8|Referer=https://widevine.licenses4.me/'
            #return 'https://zcri.vhls.ru.com/cdn/premium' + hat + '/playlist.m3u8|Referer=https://player.licenses4.me/'
            return 'https://webudi.onlinewebtv.lol/lb/premium' + hat + '/index.m3u8?&connection=keepalive|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36&Referer=https://streamservicehd.click/'
            #src= re.findall('<iframe class.*?src="([^"]*)',page_data)[0]
            #fu = requests.get(src, headers={'User-Agent':'iPad','Referer':src}).text
            #hat= re.findall('<iframe.*?src="([^"]*)',page_data)[0]
            #white = requests.get(hat, headers={'User-Agent':'Mozilla/5.0','Referer':'https://daddylive.co/','accept':'*/*'}).text
            #if 'm3u8' in white:
                #crew = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', white)[0]
                #return crew + '|User-Agent=ipad&Referer=' + hat
           # else:
                #find = re.findall('eval\(function(.+?m3u8.+)', white)[0]
                #the = jsunpack.unpack(find)
                #crew= re.findall('source\s*:\s*"([^"]*)',the)[0]
                #return crew + '|User-Agent=ipad&Referer=' + hat
        except:
            return

    def ovostreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            hat = re.findall('(?s)player-box">\s*<iframe.*?src="([^"]*)',page_data)[0]
            h = requests.get(hat, headers={'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36','Referer':'https://sportstvnow.org/'}).text
            s = re.findall('source = "([^"]*)',h)[0]
            return s + '|User-Agent=Mozilla/5.0&Referer=https://sportstvnow.org/'
        except:
            return

    def tvtwofour(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)baseUrl(?:.*?l = )"([^"]*)', page_data)[0]
            x = re.findall('(?s)channelName = "([^"]*)', page_data)[0]
            s = re.findall('(?s)var link=(?:.*?")([^"]*)', page_data)[0]
            return r + x + s + '|Referer=http://tv247.us/all-channels/'
        except:
            return

    def techno(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('iframe\ssrc="([^"]*)', page_data)[0]
            h = client.request(w)
            i = re.findall('source:.*?\'.*?\'.*?\'([^\']*)', h)[0]
            return 'https://reels2watch.com/hls/' + i + '|Referer=' + url
        except:
            return

    def ranionba(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('<iframe.*?src="([^"]*)', page_data)[0]
            i = client.request(w)
            t = re.findall('(?s)https:\/\/hls.([^\']*)', i)[0]
            e = 'https://hls.' + t
            return e + '|Referer=' + w
        except:
            return

    def ranionfl(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('<iframe.*?src="([^"]*)', page_data)[0]
            w = 'https:' + w if w.startswith('//') else w
            i = client.request(w, headers={"User-Agent": 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36',"Origin": 'http://rainostreams.com', "Referer": 'http://rainostreams.com/'})
            z = re.findall('(?:source|file|m3u8URL)=\s*[\'"]([^\'"]+)', i)[0]
            z = 'https:' + z if z.startswith('//') else z
            return z + '|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.15%3B%20rv%3A108.0)%20Gecko%2F20100101%20Firefox%2F108.0&Referer=' + w
        except:
            return

    def raniofifa(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('<iframe.*?src="([^"]*)', page_data)[0]
            w = 'https:' + w if w.startswith('//') else w
            i = client.request(w)
            this = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', i)[0]
            this = 'https:' + this if w.startswith('//') else this
            return this + '|Referer=' + w
        except:
            return

    def recipemam(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('<source src=\s*[\'"]([^\'"]+)', page_data)[0]
            return s
        except:
            return

    def catchy(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('50><iframe src="([^"]*)', page_data)[0]
            w = client.request(r)
            x = re.findall('(?s)Setup the player.*?(?:source|src|file):\s*[\'"]([^\'"]+)', w)[0]
            return x + '|User-Agent=ipad&Referer=' + r
        except:
            return

    def sportsurge(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('<iframe.*?src="([^"]*)', page_data)[0]
            h = client.request(w)
            i = re.findall('<iframe.*?src="([^"]*)', h)[0]
            t = client.request(i)
            e = re.findall('<iframe.*?src="([^"]*)', t)[0]
            hat = client.request(e)
            saysfuckoff = re.findall('source:\s*\'([^\']*)', hat)[0]
            return saysfuckoff + '|Referer=' + e
        except:
            return

    def ace(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #w = re.findall(' source: \'([^\']*)', page_data)[0]
            w = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return w + '|User-Agent=ipad&Referer=' + url
        except:
            return

    def nbatvsport(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?s)<iframe.*?src="([^"]*)', page_data)[0]
            h = client.request(w)
            i = re.findall('atob\(["|\']([^"|\']*)', h)[0]
            t = base64.b64decode(i).decode('utf-8')
            return t + '|User-Agent=ipad&Referer=' + w
        except:
            return

    def geekingeek(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?s)<iframe.*?src="([^"]*)', page_data)[0]
            hat = 'http://www.geekingeek.com/' + w
            h = client.request(hat)
            i = re.findall('atob\(["|\']([^"|\']*)', h)[0]
            t = base64.b64decode(i).decode('utf-8')
            return t + '|User-Agent=ipad&Referer=' + w
        except:
            return

    def rightcombat(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            if 'm3u8' in page_data:
                s = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
                return s + '|User-Agent=Mozilla/5.0&Referer=' + url
            else:
                s = re.findall('iframe.*?src="([^"]*)', page_data)[0]
                q = requests.get(s).text
                src = re.findall('<iframe src="([^"]*)', q)[0]
                src = 'http:' + src if src.startswith('//') else src
                fu = requests.get(src, headers={'User-Agent':'iPad','Referer':url}).text
                hat = re.findall('eval\(function(.+?m3u8.+)', fu)[0]
                the = jsunpack.unpack(hat)
                crew= re.findall('var\s*src="([^"]*)',the)[0]
                return crew + '|User-Agent=ipad&Referer=' + url
        except:
            return

    def poscitech(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #src= re.findall('<iframe.*?src="([^"]*)',page_data)[0]
            #fu = requests.get(src, headers={'User-Agent':'iPad','Referer':src}).text
            #hat= re.findall('<iframe.*?src="([^"]*)',fu)[0]
            #white = requests.get(hat, headers={'User-Agent':'iPad','Referer':src}).text
            #crew= re.findall('source\s*:\s*"([^"]*)',white)[0]
            #return crew + '|User-Agent=ipad&Referer=' + hat
            src = re.findall('iframe.*?src="([^"]*)', page_data)[0]
            src = 'http:' + src if src.startswith('//') else src
            fu = requests.get(src, headers={'User-Agent':'Mozilla/5.0','Referer':url}).text
            hat = re.findall('iframe src.*?id=([^"]*)', fu)[0]
            return 'https://newtest.webtv1.lol/ddyx2/premium' + hat + '/playlist.m3u8|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.15%3B%20rv%3A108.0)%20Gecko%2F20100101%20Firefox%2F108.0&Referer=https%3A%2F%2Feplayer.click%2F'
        except:
            return

    def iwizwig(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            src= re.findall('<iframe.*?src="([^"]*)',page_data)[0]
            fu = requests.get(src, headers={'User-Agent':'iPad','Referer':src}).text
            hat= re.findall('<iframe.*?src="([^"]*)',fu)[0]
            white = requests.get(hat, headers={'User-Agent':'iPad','Referer':src}).text
            #find = re.findall('eval\(function(.+?m3u8.+)', white)[0]
            #the = jsunpack.unpack(find)
            #crew= re.findall('source\s*:\s*"([^"]*)',the)[0]
            crew= re.findall('source\s*:\s*"([^"]*)',white)[0]
            return crew + '|User-Agent=ipad&Referer=http://iwizwig.online'
        except:
            return

    def cricworld(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            i = re.findall('atob\(["|\']([^"|\']*)', page_data)[0]
            t = base64.b64decode(i).decode('utf-8')
            return t + '|User-Agent=ipad&Referer=' + url
        except:
            return

    def darwinstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            i = re.findall('source: \'([^\']*)', page_data)[0]
            return i + '|User-Agent=ipad&Referer=' + url
        except:
            return

    def freetvsports(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            src= re.findall('<iframe.*?src="([^"]*)',page_data)[0]
            fu = requests.get(src, headers={'User-Agent':'iPad','Referer':src}).text
            hat= re.findall('<iframe.*?src="([^"]*)',fu)[0]
            white = requests.get(hat, headers={'User-Agent':'iPad','Referer':src}).text
            crew= re.findall('source\s*:\s*"([^"]*)',white)[0]
            return crew + '|User-Agent=ipad&Referer=' + src
        except:
            return

    def capp(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return w + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&Referer=' + url
        except:
            return

    def ptwopstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = client.request(url)
            hea = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36','Origin': 'https://fastreams.com', 'Referer': 'https://fastreams.com/channel/15.php'}
            headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36','Origin': 'http://xestreams.com', 'Referer': 'http://ftdryiwv.mmazones.com:8080/'}
            r = re.findall('<iframe class.*?src="([^"]*)',u)[0]
            page_data = requests.get(r, headers=headers).text
            t = re.findall('<iframe src="([^"]*)',page_data)[0]
            a = requests.get(t, headers=hea).text
            z = re.findall('window.atob\("([^"]*)',a)[0]
            z = base64.b64decode(z).decode('utf-8')
            return z + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36&Referer=' + t
            #if 'm3u8' in page_data:
               # z = re.findall('source:\s*\'([^\']*)')
               # return z + '|User-Agent=iPad&Referer=' + r
            #else:
               # pattern = r'''return\(\[([^\]]+).+?\+\s*([^\.]+).+?\+.+?"([^"]+)'''.format(page_data)
              #  par1, par2, par3 = re.findall(pattern, page_data, re.DOTALL)[0]
              #  part2 = re.findall(r'var\s*{0}\s*=\s*\["([^]]+)'.format(par2), page_data)[0].replace('","', '')[:-1]
              #  part3 = re.findall('id={0}>([^<]+)'.format(par3), page_data)[0]
              #  part1 = par1.replace('","','').replace('\\/', '/')[1:-1]
              #  part1 = 'http:' + part1 if part1.startswith('//') else part1
              #  return part1 + part2 + part3 + '|User-Agent=iPad&Referer=' + r
           # if 'window.atob' in page_data:
               # z = re.findall('window.atob\("([^"]*)',page_data)[0]
               # z = base64.b64decode(z).decode('utf-8')
                #return z + '|User-Agent=iPad&Referer=' + r
        except:
            return

    def sportek(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('" src="([^"]*)', page_data)[0]
            h = 'http://sportek.xyz' + w
            i = client.request(h)
            t = re.findall('src : "([^"]*)', i)[0]
            return t + '|Referer=' + h
        except:
            return

    def bong(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('<iframe.*?src="([^"]*)', page_data)[0]
            h = 'http://bongstreams.com' + w
            i = client.request(h)
            t = re.findall('src : "([^"]*)', i)[0]
            return t + '|Referer=' + h
        except:
            return

    def sporteks(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('(?s)iframe frameborder.*?src="([^"]*)', page_data)[0]
            p = client.request(s)
            w = re.findall('url:\s*"([^"]*)', p)[0]
            h = re.findall('data:\s\{"([^"]*)', p)[0]
            i = re.findall('var vidgstream = "([^"]*)', p)[0]
            hat = w + '?' + h + '=' + i
            the = requests.get(hat).text
            crew = re.findall('{"rawUrl":"([^"]*)', the)[0]
            made = crew.replace('\\', '')
            return made + '|Referer=http://wpstream.tv/'
        except:
            return

    def pawastreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s =  re.findall('(?s)"><iframe.*?src="([^"]*)', page_data)[0] 
            r = client.request(s, headers={"Referer": url, "User-Agent": 'Mozilla/5.0'})
            x = re.findall('atob\(\'([^\']*)', r)[0]
            t = base64.b64decode(x).decode('utf-8')
            return t + '|User-Agent=ipad&Referer=' + s
        except:
            return

    def supertipz(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #src = re.findall('<iframe src="([^"]*)', page_data)[0]
            #src = 'http:' + src if src.startswith('//') else src
            #fu = requests.get(src, headers={'User-Agent':'iPad','Referer':url}).text
            #hat = re.findall('eval\(function(.+?m3u8.+)', fu)[0]
            #the = jsunpack.unpack(hat)
            #crew= re.findall('var\s*src="([^"]*)',the)[0]
            #return crew + '|User-Agent=ipad&Referer=' + url
            w = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return w + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&Referer=' + url
        except:
            return

    def dubsstreamz(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            if 'm3u8' in page_data:
                t = re.findall('var source = \'([^\']*)', page_data)[0]
                return t + '|User-Agent=iPad&Referer=' + url
            else :
                r = re.findall('<iframe.*?src="([^"]*)', page_data)[0]
                u = client.request(r, headers={'User-Agent':'iPad','Referer':'http://www.dubsstreamz.com'})
                x = re.findall('atob\(\'([^\']*)', u)[0]
                t = base64.b64decode(x).decode('utf-8')
                return t + '|User-Agent=iPad&Referer=' + r
        except:
            return

    def summerlivestream(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('<iframe.*?src="([^"]*)', page_data)[0]
            murl=(r);now=int((int(time.time()) + 86400) * 1000)
            source=requests.get(murl,headers={'User-Agent':'Mozilla/5.0','Referer':'https://sportsbay.org/','accept':'*/*'}).text
            if 'm3u8' in source:
                strurl = re.findall('Clappr.Player[\w\W]*?(?:source|src|file)(?:\s*|):(?:\s*|)[\'"]([^\'"]+)',source)[0]+'|User-Agent=ipad&Origin=https://freefeds.com&Referer=https://freefeds.com/'
                return strurl
            else :     
                teleID=re.findall('embed/(\d+)\.',source)[0]
                r=requests.get('https://teleriumtv.com/streams/%s/%s.json'%(teleID,now),headers={'User-Agent':'Mozilla/5.0','Referer':'https://teleriumtv.com/embed/%s.html'%teleID,'accept':'*/*'},cookies={'volume':'0'}).json()
                strurl=r.get('url');netloc='https://teleriumtv.com'
                headers={'User-Agent': 'Mozilla/5.0','Origin':netloc,'Referer':'https://teleriumtv.com/embed/%s.html'%teleID}
                if r.get('tokenurl'):
                    strurl += requests.get(netloc+r.get('tokenurl'),headers=headers).json()[10][::-1]
                strurl=strurl if strurl.startswith('http') else 'https:'+strurl
                return strurl+'|{0}'.format(urlencode(headers))
        except:
            return
                
    def myoplay(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('sources[\w\W]*?(?:source|src|file)(?:\s*|):(?:\s*|)[\'"]([^\'"]+)', page_data)[0]
            return r + '|Referer=' + url
        except:
            return

    def sstwentyfour(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            headers={'User-Agent':'Mozilla/5.0','Referer':'https://ww.soccer24hd.com','accept':'*/*'}
            r = re.findall('(?s)holder">\s*<iframe.*?src="([^"]*)',page_data)[0]
            s = requests.get(r,headers=headers).text
            t = re.findall('iframe.*?src="([^"]*)',s)[0]
            a = requests.get(t,headers=headers).text
            w = re.findall('iframe.*?src="([^"]*)',a)[0]
            h = requests.get(w,headers=headers).text
            if 'm3u8' in h:
                l = re.findall('source:"([^"]*)', h)[0]
                return l + '|User-Agent=Mozilla/5.0&Referer=' + w
            else :
                l = re.findall('atob\(\'([^\']*)', h)[0]
                l = base64.b64decode(l).decode('utf-8')
            #q = re.findall('iframe.*?src="([^"]*)',h)[0]
            #e = requests.get(q,headers=headers).text
            #find = re.findall('eval\(function(.+?m3u8.+)', e)[0]
            #unpack = jsunpack.unpack(find)
            #i = re.findall('var (?:source|src|file)=\s*[\'"]([^\'"]+)',unpack)[0]
                return l + '|User-Agent=Mozilla/5.0&Referer=' + w
        except:
            return

    def buffstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = requests.get(url).text
            x = re.findall('window.atob\(\'([^\']*)',page_data)[0]
            x = base64.b64decode(x).decode('utf-8')
            return x + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36&Referer=https://googlapisapi.com/'
        except:
            return

    def crazystreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)<iframe allow=.*?src=\'([^\']*)',page_data)[0]
            q = client.request(r)
            w = re.findall('url:\s*"([^"]*)', q)[0]
            h = re.findall('data:\s\{"([^"]*)', q)[0]
            i = re.findall('var vidgstream = "([^"]*)', q)[0]
            t = re.findall('gethlsUrl\(vidgstream,\s([^,]*)', q)[0]
            e = re.findall('gethlsUrl\(vidgstream,(?:[^,]*),\s([^\)]*)', q)[0]
            hat = w + '?' + h + '=' + i + '&serverid=' + t + '&cid=' + e
            the = client.request(hat)
            crew = re.findall('{"rawUrl":"([^"]*)', the)[0]
            made = crew.replace('\\', '')
            return made + '|Referer=' + url
        except:
            return

    def sportsnest(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return r + '|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.14%3B%20rv%3A99.0)%20Gecko%2F20100101%20Firefox%2F99.0&Referer=' + url
        except:
            return

    def onestream(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = requests.get(url).text
            #r = re.findall('atob\(["|\']([^"|\']*)', page_data)[0]
            #s = re.findall('cdn\s*=\s*\["([^"]*)', page_data)[0]
            #x = base64.b64decode(r).decode("ascii")
            #x = x.replace(x[x.index("/") + 2:].split(".")[0], s)
            #w = re.findall('url:\s*\'([^\']*)', page_data)[0] + str(round(random.random() * 12))
            #h = 'http://1stream.top' + w
            #hat = requests.get(h, headers={"User-Agent": 'Mozilla/5.0'}).text
            #I = re.findall('source":"([^"]*)', hat)[0]
            #t = base64.b64decode(i).decode("utf-8")
            #return x +'|Referer=' + quote_plus(url)
            #return t +'|Referer=' + quote_plus(url)
            #w = re.findall('url:\s*\'([^\']*)', page_data)[0] + str(random.randint(1,64))
            #token = re.findall('_token": "([^"]*)', page_data)[0]
            #h = 'http://1stream.link' + w
            #hat = requests.post(h, data={"_token": token, "sport": "other"}, headers={"Referer": h, "User-Agent": 'Mozilla/5.0', "X-Requested-With": "XMLHttpRequest"}).json()
            #s = re.findall('"source":"([^"]*)', hat)[0]
            #s = base64.b64decode(s).decode('utf-8')
            #return s +'|Referer=' + quote_plus(url)
            #linkUrlPieces = re.findall('canonical" href="([^:]*):\/\/([^\/]*)\/', page_data)[0]
            #protocol = linkUrlPieces[0]
            #domain = linkUrlPieces[1]
            #linkPayload = re.findall('url: \'([^\']*)\'[\s\S]*eventId: "([^"]*)"[\s\S]*_token": "([^"]*)"[\s\S]*sport: \'([^"]*)\'', page_data)
            #path = linkPayload[0][0]
            #eventId = linkPayload[0][1]
            #token = linkPayload[0][2]
            #sport = linkPayload[0][3]
            #postData = {'eventId': eventId, 'token': token, 'sport': sport}
            #streamPostResponse = requests.post(protocol + '://' + domain + '/' + path + str(random.randint(1,64)),postData).text
            #encryptedStreamUrl = re.findall('"source":"([^"]*)', streamPostResponse)[0]
            encryptedStreamUrl = re.findall('source: window.atob\("([^"]*)', page_data)[0]
            decryptedStreamUrl = base64.b64decode(encryptedStreamUrl).decode('utf-8')
            return decryptedStreamUrl + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:132.0) Gecko/20100101 Firefox/132.0&Referer=https://googlapisapi.com/'
        except:
            return

    def toptv(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = requests.get(url, headers={"User-Agent": 'ipad'}).text
            s = re.findall('iframe.*?src="([^"]*)', page_data)[0]
            return s
        except:
            return

    def dubznetwork(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = requests.get(url, headers={"User-Agent": 'ipad'}).text
            s = re.findall('atob\(["|\']([^"|\']*)', u)[0]
            s = base64.b64decode(s).decode('utf-8')
            return s + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&Referer=' + url
        except:
            return

    #def tvsportslive(self, url):
     #   try:
     #       if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
    #        page_data = client.request(url)
    #        s =  re.findall(r'src="([^"]+\.php\?[^"]*)', page_data)[0]
    #        response = requests.get(s).text
    #        fid = re.findall(r'fid\s*=\s*"([^"]+)"', response)[0]
    #        w =  re.findall(r'src="([^"]+\.php\?[^"]*)', response)[0]
    #        t = requests.get(w).text
    #        doamin = re.findall(r'https?://[a-zA-Z0-9.-]+\.(?:com|net|org|xyz|info|tv|cc|co)', t)
    #        x = "{doamin}/maestrohd1.php?player=mobile&live={fid}"
    #        r = requests.get(x).text
    #        m3u8 = re.findall(r"atob\(['\"]([^'\"]+)['\"]\)", r); m3u8 = base64.b64decode(m3u8).decode('utf-8')
    #        return m3u8 + '|Referer={doamin}/&Origin={doamin}&Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'
       # except:
       #     return

    def epicmartial(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            headers = {
                "Referer": "https://castweb.xyz",
                "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
            }
            page_data = requests.get(url, headers=headers).text
            fid = re.findall(r'fid\s*=\s*"([^"]+)"', page_data)[0]
            x = 'https://processbigger.com/maestrohd1.php?player=mobile&live=' + fid
            r = requests.get(x, headers=headers).text
            match = re.search(r'return\(\[([^\]]+)\]\.join\(""\)', r)
            array_content = match.group(1)
            chars = re.findall(r'"([^"]+)"', array_content)
            joined = ''.join(chars).replace(r'\/', '/')
            joined = joined.replace('https://///', 'https://').replace('https:////', 'https://').replace('https:///', 'https://')
            return joined + '|Referer=https://processbigger.com/&Origin=https://processbigger.com&User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'
        except:
            return

    def sportsio(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r1 = re.findall('(?s)<iframe src="([^"]*)',page_data)[0]
            u2 = requests.get(r1).text
            result = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', u2)[0]
            return result + '|User-Agent=iPad&Referer=' + r1
        except:
            return

    def sixtyfps(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?s)<iframe src="([^"]*)',page_data)[0]
            h = requests.get(w).text
            i = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', h)[0]
            return i + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&Referer=' + w
        except:
            return

    def sportsguild(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            u = client.request(url)
            r = re.findall('(?s)<iframe src="([^"]*)', u)[0]
            t = client.request(r)
            s = re.findall('atob\(["|\']([^"|\']*)', t)[0]
            s = base64.b64decode(s).decode('utf-8')
            return s + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&Referer=' + r
        except:
            return

    def ustvtwentyfourseven(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('iframe src=\'([^\']*)', page_data)[0]
            h = 'https://ustv247.tv' + w
            i = client.request(h)
            s = re.findall('var hls_src=\'([^\']*)',i)[0]
            return s + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0&Referer=' + h
        except:
            return
         
    def sportinglive(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('source\s*src="([^"]*)', page_data)[0]
            return w + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0&Referer=' + url
        except:
            return

    def rmeth(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?s)<iframe w.*?src="([^"]*)', page_data)[0]
            h = client.request(w)
            if 'atob' in h:
                i = re.findall('atob\("([^"]*)', h)[0]
                i = base64.b64decode(i).decode('utf-8')
                return i + '|User-Agent=Mozilla/5.0&Referer=' + url
            else:
                i = re.findall('(?s)source src="([^"]*)', h)[0] 
                return i + '|User-Agent=Mozilla/5.0&Referer=' + url
        except:
            return

    def silverspoon(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return w + '|User-Agent=Mozilla/5.0&Referer=' + url
        except:
            return

    def volokit(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            w = re.findall('(?s)iframe allow=\'encrypted-media.*?src=\'([^\']*)', page_data)[0]
            h = client.request(w)
            i = re.findall('source: [\'"]([^\'"]+)', h)[0]
            return i + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36&Referer=http://volokit2.com/&Origin=http://volokit2.com'
        except:
            return

    def maxsport(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            #s = re.findall('(?s)iframe src="([^"]*)',page_data)[0]
            #t = requests.get(s,headers={"Referer": url, "User-Agent": 'Mozilla/5.0'}).text
            #pattern = r'''return\(\[([^\]]+).+?\+\s*([^\.]+).+?\+.+?"([^"]+)'''.format(t)
            #par1, par2, par3 = re.findall(pattern, t, re.DOTALL)[0]
            #part1 = par1.replace('","','').replace('\\/', '/')[1:-1]
            #part1 = 'http:' + part1 if part1.startswith('//') else part1
            #return part1  + '|User-Agent=iPad&Referer=https://gocast2.com/'
            s = re.findall('(?s)<iframe.*?src=".*?(\d+)',page_data)[0]
            return 'https://webudi.webtv1.lol/lb/premium' + s + '/index.m3u8?&connection=keepalive|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36&Referer=https://streamservicehd.click/'
        except:
            return

    def hitstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            if 'weakstream' in page_data:
                s = re.findall('(?s)iframe frameborder.*?src="([^"]*)', page_data)[0]
                p = client.request(s)
                w = re.findall('url:\s*"([^"]*)', p)[0]
                h = re.findall('data:\s\{"([^"]*)', p)[0]
                i = re.findall('var vidgstream = "([^"]*)', p)[0]
                hat = w + '?' + h + '=' + i
                the = client.request(hat)
                crew = re.findall('{"rawUrl":"([^"]*)', the)[0]
                made = crew.replace('\\', '')
                return made + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=https%3A%2F%2Fweakstream.org%2F'
            else:
                r = re.findall('fid="([^"]*)', page_data)[0]
                s = 'https://switchcast2.com/embed.php?player=desktop&live=' + r
                t = requests.get(s, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0', "Referer": url}).text
                w = ("".join(eval(re.findall(r"return\((\[.+?\])", t)[0]))).replace("\\", "")
                return w + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + s 
        except:  
            return

    def alexsports(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            e = re.findall('(?s)iframe class.*?src="([^"]*)',page_data)[0]
            e = e.replace('//', 'https://')
            s = requests.get(e).text
            t = re.findall('window.atob\(["|\']([^"|\']*)', s)[0];t = base64.b64decode(t).decode('utf-8');t = t.replace('//', 'https://')
            return t + '|User-Agent=Mozilla/5.0&Referer=' + e
        except:
            return

    def metaporky(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('(?s)iframe\sf.*?src="([^"]*)',page_data)[0]
            t = requests.get(s).text
            r = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', t)[0]
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=' + url
        except:
            return

    def nbagaffer(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=' + url
        except:
            return

    def soccerstreams(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)iframe.*?src="([^"]*)', page_data)[0]
            t = requests.get(r).text
            x = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', t)[0]
            return x + '|User-Agent=Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36&Referer=https://fordems.biz/'
        except:
            return

    def soccersislive(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            x = re.findall('\?id=([^"]*)', page_data)[0]
            return 'https://newtest.openhd.lol/ddy4/premium'+ x +'/tracks-v1a1/mono.m3u8' + '|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.15%3B%20rv%3A108.0)%20Gecko%2F20100101%20Firefox%2F108.0&Referer=https%3A%2F%2Feplayer.click%2F'
        except:
            return

    def basketballvideo(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            x = re.findall('(?s)style-default" href="([^"]*)', page_data)[0]
            f = client.request(x)
            s = re.findall('(?s)<iframe.*?src="([^"]*)', f)[0]
            return s
        except:
            return

    def nflvideo(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            x = re.findall('(?s)Full Game Replay.*?<iframe.*?src="([^"]*)', page_data)[0]
            return x
        except:
            return

    def nizarstream(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)<iframe\ssrc="([^"]*)',page_data)[0]
            s = requests.get(r,headers={'User-Agent':'ipad','Referer':'http://nizarstream.com/nfl/stream/1172'}).text
            find = re.findall('eval\(function(.+?m3u8.+)', s)[0]
            unpack = jsunpack.unpack(find)
            m3u8 = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)',unpack)[0]
            return m3u8 + '|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.15%3B%20rv%3A108.0)%20Gecko%2F20100101%20Firefox%2F108.0&Referer=https%3A%2F%2Fonionplay.live%2F'
        except:
            return
                
    def enjoyhd(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('iframe.*?src="([^"]*)', page_data)[0]
            t = requests.get(s).text
            e = re.findall('<iframe.*?src="([^"]*)', t)[0]
            w = requests.get(e).text
            hat = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', w)[0]
            return hat + '|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.15%3B%20rv%3A108.0)%20Gecko%2F20100101%20Firefox%2F108.0&Referer=https%3A%2F%2Fenjoyhd.xyz%2F' 
        except:
            return

    def youpit(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            s = re.findall('<iframe\ssrc="([^"]*)', page_data)[0]
            h = requests.get(s, headers={"Referer": s, "User-Agent": 'Mozilla/5.0'}).text
            i = re.compile(r'decodeURIComponent\(escape\(r\)\)}\("([^"]*)",([^,]*),"([^"]*)",([^,]*),([^,]*),([^\)]*)').findall(h)[0]
            t = hunter.hunter(i[0], int(i[1]), i[2], int(i[3]), int(i[4]), int(i[5]))
            e = re.findall('source:\s*\'([^\']*)',t)[0]
            return e + '|User-Agent=Mozilla/5.0&Referer=' + s
        except:
            return

    def prolive(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            hat = re.findall('(?s)<iframe.*?src=".*?=(\d+)',page_data)[0]
            return 'https://newtest.webtv1.lol/ddy5/premium' + hat + '/tracks-v1a1/mono.m3u8?&connection=keepalive|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36&Referer=https://olacast.live/'
        except:
            return

    def paktech(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            headers={'Accept':'*/*','Accept-Encoding':'gzip, deflate, br','Accept-Language':'en-US,en;q=0.5','Connection':'keep-alive','Host':'newtest.webtv1.lol','Origin':'https://eplayer.click','Referer':'https://eplayer.click/','Sec-Fetch-Dest':'empty','Sec-Fetch-Mode':'cors','Sec-Fetch-Site':'cross-site','TE':'trailers','User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0'}
            white = re.findall('(?s)position": 3.*?".*?".*?".*?".*?"([^"]*)',page_data)[0]
            crew = requests.get(white).text
            hat = re.findall('(?s)<iframe.*?ch(\d+)',crew)[0]
            return 'https://webudi.webtv1.lol/lb/premium' + hat + '/index.m3u8' + '|{0}'.format(urlencode(headers))
        except:
            return

    def olympicology(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            hat = re.findall('(?s)<iframe.*?src="([^"]*)',page_data)[0]
            h = requests.get(hat).text
            s = re.findall('var\s(?:source|src|file)\s*=\s*[\'"]([^\'"]+)',h)[0]
            return s + '|User-Agent=Mozilla/5.0&Referer=' + hat
        except:
            return
                
    def enjoyfourk(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            hat = re.findall('<iframe\s*src="([^"]*)',page_data)[0]
            h = requests.get(hat).text
            whitehat = re.findall('<iframe\s*src="([^"]*)',h)[0]
            s = requests.get(whitehat).text
            crew = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', s)[0]
            return crew + '|User-Agent=Mozilla/5.0&Referer=' + s
        except:
            return

    def sportsstreamsite(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('iframe sc.*?src="([^"]*)', page_data)[0]
            q = requests.get(r).text
            w = re.findall('iframe\s*.*?src="([^"]*)', q)[0]
            s = 'https://www.sports-stream.site' + w
            e = requests.get(s).text
            u = re.findall('iframe src="([^"]*)', e)[0]
            t = requests.get(u, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0', "Referer": u}).text
            w = ("".join(eval(re.findall(r"return\((\[.+?\])", t)[0]))).replace("\\", "")
            return w + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + u
        except:
            return

    def hdrez(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = requests.get(url).text
            r = re.findall('(?s)wrap">\s<iframe.*?src="([^"]*)',page_data)[0]
            t = client.request(r)
            x = re.findall('(?s)m3u8URL="([^"]*)',t)[0]
            #x = base64.b64decode(x).decode('utf-8')
            headers = {"Origin": "https://embed4u.xyz","Referer": "https://embed4u.xyz/","User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0"}
            return x + '|{0}'.format(urlencode(headers))

        except:
            return

    def bingsport(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)iframe\s*src="([^"]*)',page_data)[0]
            t = client.request(r)
            x = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)',t)[0]
            return x + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + r
        except:
            return

    def tvapp(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            token = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return token + '|User-Agent=Mozilla/5.0&Referer=https://thetvapp.to/'
        except:
            return

    def score(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            token = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', page_data)[0]
            return token + '|User-Agent=Mozilla/5.0&Referer=' + url
        except:
            return
                
    def worldcupglory(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)first-iframe">.*?src="([^"]*)',page_data)[0]
            t = client.request(r)
            x = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)',t)[0]
            return x + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + r
        except:
            return
                
    def headlines(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)first-iframe">.*?src="([^"]*)',page_data)[0]
            t = client.request(r)
            x = re.findall('(?s)source = \'([^\']*)',t)[0]
            return x + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + r
        except:
            return
                
    def backfirstwo(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)<iframe.*?src=\'([^\']*)',page_data)[0]
            t = client.request(r)
            x = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)',t)[0]
            return x + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + r
        except:
            return
                
    def streambtw(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)',page_data)[0]
            return r + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + url
        except:
            return
                
    def sportsupa(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            r = re.findall('(?s)<iframe.*?src="([^"]*)',page_data)[0]
            s = client.request(r)
            w = re.findall('(?:source|src|file):\s*[\'"]([^\'"]+)', s)[0]
            return w + '|User-Agent=Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010.15%3B%20rv%3A120.0)%20Gecko%2F20100101%20Firefox%2F120.0&Referer=https%3A%2F%2Fnflscoop.xyz%2F'
        except:
            return

    def mlbstreamsai(self, url):
        try:
            if not control.infoLabel('Container.PluginName') == 'plugin.video.thecrew': return
            page_data = client.request(url)
            e = re.findall('atob\(["|\']([^"|\']*)', page_data)[0]; e = base64.b64decode(e).decode('utf-8')
            return e + '|User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0&Referer=' + url
        except:
            return

    def naughtyblog(self, url):
        try:           
            u = client.request(url)
            u = u.split('<strong>Download:', 1)[-1]; u = u.split('<strong>Watch online:', 1)[0]
            r = re.findall('(?s)<a h(?:[^=]*)=(?:[^=]*)="([^"]*)(?:[^>]*)>([^<]*)', u)
            hosts = ['Rapidgator','Uploaded']; e =[]
            for i in r:
                if any(x for x in hosts if x in i[0]): e.append((i[0].replace('Direct Link',''),i[1]))
            return e
        except:
            return
 
    def totalsportek(self, url):
        try:           
            page_data = client.request(url)
            d = re.findall('(?s)><iframe.*?src="([^"]*)"\s*frameborder="0"\s*scrolling="no"\s*s',page_data)[0]
            x = requests.get(d).text
            a = re.findall('(?s)<iframe.*?src="([^"]*)',x)[0]
            e = requests.get(a,headers={"Referer": d, "User-Agent": 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36'}).text
            z = re.findall('streamUrl = "([^"]*)',e)[0]
            z = z.replace('\\', '')
            return z + '|User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36&Refer=' + a + '/&Origin=' + a
        except:
            return

    def fsportshd(self, url):
        try:
            headers = {
                "Referer": "https://fsportshd.xyz/",
                "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"
            }
            page_data = requests.get(url, headers=headers).text
            fid = re.findall('fid\s*=\s*"([^"]+)"', page_data)[0]
            x = 'https://stellarthread.com/footy.php?player=mobile&live=' + fid
            r = requests.get(x, headers=headers).text
            match = re.search(r'return\(\[([^\]]+)\]\.join\(""\)', r)
            array_content = match.group(1)
            chars = re.findall('"([^"]+)"', array_content)
            joined = ''.join(chars).replace('\/', '/')
            joined = joined.replace('https://///', 'https://').replace('https:////', 'https://').replace('https:///', 'https://')
            return joined + '|Referer=https://stellarthread.com/&Origin=https://stellarthread.com&User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'
        except:
            return